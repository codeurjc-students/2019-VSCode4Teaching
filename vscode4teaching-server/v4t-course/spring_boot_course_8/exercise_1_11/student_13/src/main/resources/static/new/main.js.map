{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/diagram/diagram.component.html","webpack:///./src/app/diagram/diagram.component.ts","webpack:///./src/app/diagram/diagram.service.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/header/header.service.ts","webpack:///./src/app/home/chapter.service.ts","webpack:///./src/app/home/dialogConcept.component.html","webpack:///./src/app/home/main.component.css","webpack:///./src/app/home/main.component.html","webpack:///./src/app/home/main.component.ts","webpack:///./src/app/home/newConcept.component.ts","webpack:///./src/app/images/image.service.ts","webpack:///./src/app/login/auth.interceptor.ts","webpack:///./src/app/login/error.interceptor.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/student/question.service.ts","webpack:///./src/app/student/student.component.css","webpack:///./src/app/student/student.component.html","webpack:///./src/app/student/student.component.ts","webpack:///./src/app/student/yesNoDialog.component.html","webpack:///./src/app/student/yesNoDialog.component.ts","webpack:///./src/app/teacher/answer.service.ts","webpack:///./src/app/teacher/dialogAnswer.component.html","webpack:///./src/app/teacher/dialogJust.component.html","webpack:///./src/app/teacher/imageposter.component.css","webpack:///./src/app/teacher/imageposter.component.html","webpack:///./src/app/teacher/imageposter.component.ts","webpack:///./src/app/teacher/justification.service.ts","webpack:///./src/app/teacher/newanswer.component.css","webpack:///./src/app/teacher/newanswer.component.ts","webpack:///./src/app/teacher/newjust.component.css","webpack:///./src/app/teacher/newjust.component.ts","webpack:///./src/app/teacher/teacher.component.css","webpack:///./src/app/teacher/teacher.component.html","webpack:///./src/app/teacher/teacher.component.ts","webpack:///./src/app/teacher/teacher.service.ts","webpack:///./src/app/teacher/urlchange.component.css","webpack:///./src/app/teacher/urlchange.component.html","webpack:///./src/app/teacher/urlchange.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { StudentComponent } from \"./student/student.component\";\r\nimport { TeacherComponent } from './teacher/teacher.component';\r\nimport { ChapterComponent } from './home/main.component';\r\n\r\nconst routes: Routes = [{ path: \"concept/:id\", component: StudentComponent},\r\n                        { path: \"teacher/:id\", component: TeacherComponent},\r\n                        { path: \"\", component: ChapterComponent}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {}\r\n","module.exports = \"<header></header>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n/**\r\n * Entry point of frontend\r\n */\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {}\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\n\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatTabsModule } from \"@angular/material/tabs\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatDividerModule } from \"@angular/material/divider\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatDialogModule } from \"@angular/material/dialog\";\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\n\r\nimport { CovalentLayoutModule } from \"@covalent/core/layout\";\r\nimport { CovalentStepsModule } from \"@covalent/core/steps\";\r\nimport { CovalentExpansionPanelModule } from '@covalent/core/expansion-panel';\r\nimport { CovalentDialogsModule } from '@covalent/core';\r\nimport { CovalentFileModule } from '@covalent/core/file'\r\n\r\nimport { CovalentBaseEchartsModule } from '@covalent/echarts/base';\r\nimport { CovalentBarEchartsModule } from '@covalent/echarts/bar';\r\nimport { CovalentTooltipEchartsModule } from '@covalent/echarts/tooltip';\r\n\r\nimport { ChapterComponent } from \"./home/main.component\";\r\nimport { HeaderComponent } from \"./header/header.component\";\r\nimport { DiagramComponent } from \"./diagram/diagram.component\";\r\nimport { StudentComponent } from \"./student/student.component\";\r\nimport { TeacherComponent } from \"./teacher/teacher.component\";\r\nimport { UrlChangerComponent } from \"./teacher/urlchange.component\";\r\nimport { NewAnswerComponent } from \"./teacher/newanswer.component\";\r\nimport { NewJustComponent } from \"./teacher/newjust.component\";\r\nimport { newConcept } from \"./home/newConcept.component\";\r\n\r\n\r\nimport { LoginService } from \"./login/login.service\";\r\nimport { ChapterService } from \"./home/chapter.service\";\r\nimport { DiagramService } from \"./diagram/diagram.service\";\r\nimport { QuestionsService } from \"./student/question.service\";\r\nimport { AnswerService } from \"./teacher/answer.service\";\r\nimport { JustificationService } from \"./teacher/justification.service\";\r\nimport { TeacherService } from \"./teacher/teacher.service\";\r\nimport { BasicAuthInterceptor } from './login/auth.interceptor';\r\nimport { ErrorInterceptor } from './login/error.interceptor';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { HeaderService } from './header/header.service';\r\nimport { ImageService } from './images/image.service';\r\nimport { ImagePosterComponent } from './teacher/imageposter.component';\r\nimport { YesNoDialogComponent } from './student/yesNoDialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ChapterComponent,\r\n    DiagramComponent,\r\n    StudentComponent,\r\n    TeacherComponent,\r\n    UrlChangerComponent,\r\n    ImagePosterComponent,\r\n    NewAnswerComponent,\r\n    YesNoDialogComponent,\r\n    NewJustComponent,\r\n    newConcept\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    CovalentLayoutModule,\r\n    CovalentStepsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatTabsModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatDividerModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    CovalentBaseEchartsModule,\r\n    CovalentBarEchartsModule,\r\n    CovalentTooltipEchartsModule,\r\n    MatPaginatorModule,\r\n    CovalentExpansionPanelModule,\r\n    CovalentDialogsModule,\r\n    CovalentFileModule,\r\n    MatRadioModule\r\n  ],\r\n  providers: [ChapterService, QuestionsService, TeacherService, AnswerService, JustificationService, DiagramService, LoginService, HeaderService, ImageService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy }],\r\n  bootstrap: [AppComponent, DiagramComponent, YesNoDialogComponent, NewJustComponent],\r\n  entryComponents: [NewAnswerComponent,newConcept]\r\n})\r\nexport class AppModule { }","module.exports = \"<h2 mat-dialog-title>Diagrama</h2>\\r\\n<td-chart [style.height.px]=\\\"450\\\" [config]=\\\"config\\\">\\r\\n</td-chart>\\r\\n<button mat-button mat-dialog-close (click)=\\\"close()\\\">Cerrar</button>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { MatDialogRef } from \"@angular/material\";\r\nimport { DiagramService } from \"./diagram.service\";\r\nimport { Page } from \"../page/page.model\";\r\nimport { Diagram } from \"./diagram.model\";\r\n\r\n@Component({\r\n  selector: \"diagram\",\r\n  templateUrl: \"./diagram.component.html\"\r\n})\r\nexport class DiagramComponent {\r\n  config: Object;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DiagramComponent>,\r\n    private diagramService: DiagramService\r\n  ) {\r\n    this.diagramService\r\n      .getDiagram()\r\n      .subscribe(\r\n        (data: Page<Diagram>) => this.addDataToDiagram(data),\r\n        error => console.log(error)\r\n      );\r\n  }\r\n\r\n  addDataToDiagram(data: Page<Diagram>) {\r\n    let chapterNames: string[] = [];\r\n    let unmarked: number[] = [];\r\n    let correct: number[] = [];\r\n    let incorrect: number[] = [];\r\n    for (let i = 0; i < data.content.length; i++) {\r\n        chapterNames.push(data.content[i].chapterName);\r\n        unmarked.push(data.content[i].unmarked);\r\n        correct.push(data.content[i].correct);\r\n        incorrect.push(data.content[i].incorrect);\r\n    }\r\n    this.config = {\r\n      toolbox: {},\r\n      color: [\"#27A1EE\", \"#F05050\", \"#43C472\"],\r\n      tooltip: {},\r\n      legend: {\r\n        data: [\r\n          \"Respuestas sin corregir\",\r\n          \"Respuestas incorrectas\",\r\n          \"Respuestas correctas\"\r\n        ]\r\n      },\r\n      xAxis: {\r\n        data: chapterNames\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: \"Respuestas sin corregir\",\r\n          type: \"bar\",\r\n          stack: \"Tema\",\r\n          data: unmarked\r\n        },\r\n        {\r\n          name: \"Respuestas incorrectas\",\r\n          type: \"bar\",\r\n          stack: \"Tema\",\r\n          data: incorrect\r\n        },\r\n        {\r\n          name: \"Respuestas correctas\",\r\n          type: \"bar\",\r\n          stack: \"Tema\",\r\n          data: correct\r\n        }\r\n      ]\r\n    }\r\n\r\n    console.log(this.config);\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { Page } from \"../page/page.model\";\r\nimport { Diagram } from \"./diagram.model\";\r\nimport { LoginService } from '../login/login.service';\r\n\r\n@Injectable()\r\nexport class DiagramService {\r\n  apiUrl = environment.baseUrl;\r\n\r\n  constructor(private http: HttpClient, public loginService: LoginService) { }\r\n\r\n  //Backend is responsible for issuing the correct diagram by user\r\n  getDiagram() {\r\n    return this.http.get<Page<Diagram>>(this.apiUrl + \"/diagraminfo\", { withCredentials: true });\r\n  }\r\n}\r\n","module.exports = \"mat-icon {\\r\\n    float: right\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1pY29uIHtcclxuICAgIGZsb2F0OiByaWdodFxyXG59Il19 */\"","module.exports = \"<nav mat-tab-nav-bar backgroundColor=\\\"primary\\\">\\r\\n  <a\\r\\n    mat-tab-link\\r\\n    *ngFor=\\\"let tab of this.headerService.getTabs() | keyvalue\\\"\\r\\n    [routerLink]=\\\"tab.key\\\"\\r\\n    routerLinkActive\\r\\n    #rla=\\\"routerLinkActive\\\"\\r\\n    [active]=\\\"rla.isActive\\\"\\r\\n  >\\r\\n    {{ tab.value.name }}\\r\\n    <mat-icon *ngIf=\\\"tab.value.closable\\\" (click)=\\\"closeTab(tab.key, $event)\\\">close</mat-icon>\\r\\n  </a>\\r\\n  <a mat-tab-link *ngIf=\\\"!this.loginService.isLogged\\\" (click)='openLoginDialog()'>Login</a>\\r\\n  <a mat-tab-link *ngIf=\\\"this.loginService.isLogged\\\" (click)='logOut()'>Logout</a>\\r\\n</nav>\\r\\n<!-- Login -->\\r\\n<ng-template #loginDialog let-dialogRef=\\\"dialogRef\\\">\\r\\n  <div layout=\\\"column\\\" layout-fill>\\r\\n    <h2 mat-dialog-title>\\r\\n      Login\\r\\n    </h2>\\r\\n    <mat-dialog-content flex>\\r\\n      <form #loginForm=\\\"ngForm\\\">\\r\\n        <div layout=\\\"row\\\">\\r\\n          <mat-form-field flex>\\r\\n            <input\\r\\n              matInput\\r\\n              #userElement\\r\\n              #userControl=\\\"ngModel\\\"\\r\\n              placeholder=\\\"Usuario\\\"\\r\\n              type=\\\"text\\\"\\r\\n              maxlength=\\\"30\\\"\\r\\n              name=\\\"username\\\"\\r\\n              [(ngModel)]=\\\"username\\\"\\r\\n              required\\r\\n            />\\r\\n            <span matPrefix>\\r\\n              <mat-icon>person</mat-icon>\\r\\n            </span>\\r\\n            <mat-hint align=\\\"start\\\">\\r\\n              <span\\r\\n                [hidden]=\\\"!userControl.errors?.required || userControl.pristine\\\"\\r\\n                class=\\\"tc-red-600\\\"\\r\\n                >Required</span\\r\\n              >\\r\\n            </mat-hint>\\r\\n            <mat-hint align=\\\"end\\\">{{ userElement.value.length }} / 30</mat-hint>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div layout=\\\"row\\\">\\r\\n          <mat-form-field flex>\\r\\n            <input\\r\\n              matInput\\r\\n              #passElement\\r\\n              #passControl=\\\"ngModel\\\"\\r\\n              placeholder=\\\"Contraseña\\\"\\r\\n              type=\\\"password\\\"\\r\\n              name=\\\"password\\\"\\r\\n              [(ngModel)]=\\\"password\\\"\\r\\n              required\\r\\n            />\\r\\n            <span matPrefix>\\r\\n              <mat-icon>lock</mat-icon>\\r\\n            </span>\\r\\n            <mat-hint align=\\\"start\\\">\\r\\n              <span\\r\\n                [hidden]=\\\"!passControl.errors?.required || passControl.pristine\\\"\\r\\n                class=\\\"tc-red-600\\\"\\r\\n                >Required</span\\r\\n              >\\r\\n            </mat-hint>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div layout=\\\"row\\\">\\r\\n          <span *ngIf=\\\"loginError\\\">Usuario o contraseña incorrecto</span>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-dialog-content>\\r\\n    <mat-divider></mat-divider>\\r\\n    <mat-dialog-actions align=\\\"end\\\">\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        mat-button\\r\\n        class=\\\"text-upper\\\"\\r\\n        (click)=\\\"dialogRef.close()\\\"\\r\\n      >\\r\\n        Cerrar\\r\\n      </button>\\r\\n      \\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        mat-button\\r\\n        color=\\\"primary\\\"\\r\\n        class=\\\"text-upper\\\"\\r\\n        (click)=\\\"signup($event, userElement.value, passElement.value)\\\"\\r\\n      >\\r\\n        Registrarse\\r\\n      </button>\\r\\n      <button\\r\\n        type=\\\"button\\\"\\r\\n        mat-button\\r\\n        color=\\\"primary\\\"\\r\\n        class=\\\"text-upper\\\"\\r\\n        (click)=\\\"logIn($event, userElement.value, passElement.value)\\\"\\r\\n      >\\r\\n        Login\\r\\n      </button>\\r\\n    </mat-dialog-actions>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\"","import { Component, TemplateRef, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { LoginService } from \"../login/login.service\";\r\nimport { MatDialogRef, MatDialog } from \"@angular/material\";\r\nimport { HeaderService } from \"./header.service\";\r\nimport { Tab } from \"./tab.model\";\r\n\r\n/**\r\n * Component for the header\r\n */\r\n@Component({\r\n  selector: \"header\",\r\n  templateUrl: \"./header.component.html\",\r\n  styleUrls: [\"./header.component.css\"]\r\n})\r\nexport class HeaderComponent {\r\n  @ViewChild(\"loginDialog\") loginDialog: TemplateRef<any>;\r\n  dialogRef: MatDialogRef<any, any>;\r\n  loginError: boolean = false;\r\n  constructor(\r\n    private router: Router,\r\n    public headerService: HeaderService,\r\n    public loginService: LoginService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n  //Tab methods\r\n  addTab(name: string, route: string) {\r\n    this.headerService.addTab(name, route);\r\n  }\r\n\r\n  //Param is router url\r\n  closeTab(url: string, event) {\r\n    console.log(event);\r\n    event.preventDefault();\r\n    // If the tab to remove is the current open tab go to home route\r\n    if (url === this.router.url) this.router.navigate([\"/\"]);\r\n    this.headerService.closeTab(url);\r\n  }\r\n  //Login/Logout methods\r\n  openLoginDialog() {\r\n    this.dialogRef = this.dialog.open(this.loginDialog, {\r\n      width: \"50%\",\r\n      height: \"50%\"\r\n    });\r\n  }\r\n\r\n  logIn(event: any, user: string, pass: string) {\r\n    event.preventDefault();\r\n\r\n    this.loginService.logIn(user, pass).subscribe(\r\n      u => {\r\n        console.log(u);\r\n        this.loginError = false;\r\n        this.dialogRef.close();\r\n      },\r\n      error => (this.loginError = true)\r\n    );\r\n  }\r\n\r\n  logOut() {\r\n    this.loginService.logOut().subscribe(\r\n      response => {\r\n        this.router.navigate([\"/\"]);\r\n      },\r\n      error => console.log(\"Error when trying to log out: \" + error)\r\n    );\r\n  }\r\n\r\n  signup(event: any, user: string, pass: string) {\r\n    event.preventDefault();\r\n    this.loginService.signup(user, pass).subscribe(\r\n      u => {\r\n        this.logIn(event, user, pass)\r\n      },\r\n      (error: Error) => console.error(error)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Tab } from \"./tab.model\";\r\n\r\n@Injectable()\r\nexport class HeaderService {\r\n  tabs: Map<string, Tab>; //key is route (sets were not working as intended)\r\n  constructor() {\r\n    this.resetTabs();\r\n  }\r\n  addTab(name: string, route: string) {\r\n    this.tabs.set(route, { name: name, route: route, closable: true });\r\n  }\r\n\r\n  //Param is route url\r\n  closeTab(url: string) {\r\n    this.tabs.delete(url);\r\n  }\r\n\r\n  getTabs(): Map<string, Tab> {\r\n    return this.tabs;\r\n  }\r\n\r\n  resetTabs(){\r\n    this.tabs = new Map();\r\n    this.tabs.set(\"/\", { name: \"Inicio\", route: \"/\", closable: false });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Chapter } from \"./chapter.model\";\r\nimport { Page } from \"../page/page.model\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { Concept } from \"./concept.model\";\r\n\r\n@Injectable()\r\nexport class ChapterService {\r\n\r\n  apiUrl = environment.baseUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getChapters(page: number) {\r\n    return this.http.get<Page<Chapter>>(this.apiUrl + \"/chapters?sort=id\" + \"&page=\" + page, {\r\n      withCredentials: true\r\n    });\r\n  }\r\n\r\n  getConceptPerChapter(chapterId: number, page: number) {\r\n    return this.http.get<Page<Concept>>(\r\n      this.apiUrl + \"/chapters/\" + chapterId + \"/concepts\" + \"?page=\" + page,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  addConcept(id: number, concept: Concept) {\r\n    return this.http.post(\r\n      this.apiUrl + \"/chapters/\" + id + \"/concepts\",\r\n      concept,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  deleteConcept(chapterId: number, conceptId: number) {\r\n    return this.http.delete(\r\n      this.apiUrl + \"/chapters/\" + chapterId + \"/concepts/\" + conceptId,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  deleteChapter(chapterId: number) {\r\n    return this.http.delete(this.apiUrl + \"/chapters/\" + chapterId, { withCredentials: true })\r\n  }\r\n\r\n  createChapter(chapterName: string) {\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n    const body = {\r\n      chapterName: chapterName\r\n    };\r\n    return this.http.post(this.apiUrl + \"/chapters\",\r\n      body,\r\n      { headers: headers, withCredentials: true }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Nueva respuesta</h1>\\r\\n<div mat-dialog-content>\\r\\n    <p class=\\\"padding\\\">Nombre:</p>\\r\\n    <mat-form-field>\\r\\n            <input matInput [(ngModel)]=\\\"conceptName\\\" name=\\\"conceptName\\\">\\r\\n    </mat-form-field>\\r\\n    <p class=\\\"padding\\\">URL:</p>\\r\\n    <mat-form-field>\\r\\n            <input matInput [(ngModel)]=\\\"URL\\\" name=\\\"URL\\\">\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"newConcept()\\\" cdkFocusInitial>Aceptar</button>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancelar</button>\\r\\n</div>\\r\\n\"","module.exports = \"ul {\\r\\n    list-style-type: none;\\r\\n}\\r\\nli {\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n.imageList {\\r\\n    vertical-align: middle;\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n    margin-right: 20px;\\r\\n}\\r\\nbutton[color=\\\"primary\\\"] {\\r\\n    margin: 10px\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9tYWluLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7QUFDekI7QUFDQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixhQUFhO0lBQ2Isa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSTtBQUNKIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9tYWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCB7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbn1cclxubGkge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG4uaW1hZ2VMaXN0IHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBoZWlnaHQ6IDEwMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG59XHJcbmJ1dHRvbltjb2xvcj1cInByaW1hcnlcIl0ge1xyXG4gICAgbWFyZ2luOiAxMHB4XHJcbn0iXX0= */\"","module.exports = \"<mat-card>\\r\\n  <span *ngIf=\\\"chapterConcepts.size === 0\\\">No hay temas disponibles.</span>\\r\\n  <td-expansion-panel *ngFor=\\\"let chap of chapterConcepts | keyvalue\\\" label=\\\"{{chap.key.chapterName}}\\\">\\r\\n    <div *ngIf=\\\"this.loginService.isTeacher\\\" align=\\\"center\\\">\\r\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"align-center\\\" (click)=\\\"deleteChapter(chap.key)\\\">\\r\\n        Borrar tema\\r\\n      </button>\\r\\n    </div>\\r\\n    <hr>\\r\\n    <div *ngIf=\\\"chapterConcepts?.size == 0\\\" class=\\\"md-padding\\\">\\r\\n      <li>\\r\\n        No hay temas disponibles\\r\\n      </li>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"chapterConcepts?.size > 0\\\" class=\\\"md-padding\\\">\\r\\n      <p>{{chap.keyvalue}}</p>\\r\\n      <div *ngIf=\\\"chap?.value?.length === 0\\\">\\r\\n        <ul>\\r\\n          <li>\\r\\n            No hay conceptos disponibles para {{chap.key.chapterName}}\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"chap?.value?.length > 0\\\">\\r\\n        <ul *ngFor=\\\"let concept of chap.value\\\">\\r\\n          <li>\\r\\n            <img class=\\\"imageList\\\" [src]=\\\"concept.image\\\">\\r\\n            <button *ngIf=\\\"!this.loginService.isTeacher\\\" mat-raised-button [disabled]=!this.loginService.isLogged\\r\\n              routerLink=\\\"/concept/{{concept.id}}\\\"\\r\\n              (click)=\\\"this.headerService.addTab(concept.conceptName, '/concept/' + concept.id)\\\">{{concept.conceptName}}</button>\\r\\n            <button *ngIf=\\\"this.loginService.isTeacher\\\" mat-raised-button routerLink=\\\"/teacher/{{concept.id}}\\\"\\r\\n              (click)=\\\"this.headerService.addTab(concept.conceptName, '/teacher/' + concept.id)\\\">{{concept.conceptName}}</button>\\r\\n            <button *ngIf=\\\"this.loginService.isTeacher\\\" mat-raised-button color=\\\"primary\\\"\\r\\n              (click)=\\\"deleteConcept(chap.key.id,concept.id)\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </button>\\r\\n            <hr>\\r\\n          </li>\\r\\n        </ul>\\r\\n        <!--<hr>-->\\r\\n        <div align=\\\"center\\\">\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"getConcepts(chap.key)\\\">\\r\\n            <span>Mostrar más</span>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div align=\\\"center\\\">\\r\\n      <button *ngIf=\\\"this.loginService.isTeacher\\\" mat-raised-button color=\\\"primary\\\"\\r\\n        (click)=\\\"showDialogNewConcept(chap.key.id)\\\">\\r\\n        <mat-icon>add</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </td-expansion-panel>\\r\\n  <div align=\\\"center\\\">\\r\\n    <button *ngIf=\\\"this.loginService.isTeacher\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"addChapter()\\\" ><mat-icon>add</mat-icon></button>\\r\\n    <br>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"getChapters()\\\">\\r\\n      <span>Mostrar más</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</mat-card>\\r\\n<div *ngIf=\\\"this.loginService.isLogged\\\" align=\\\"center\\\">\\r\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"align-center\\\" (click)=\\\"showDiagram()\\\">\\r\\n    Diagrama\\r\\n  </button>\\r\\n</div>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { ChapterService } from \"./chapter.service\";\r\nimport { Chapter } from \"./chapter.model\";\r\nimport { Page } from \"../page/page.model\";\r\nimport { Concept } from \"./concept.model\";\r\nimport { LoginService } from '../login/login.service';\r\nimport { HeaderService } from '../header/header.service';\r\nimport { MatDialog } from '@angular/material';\r\nimport { DiagramComponent } from '../diagram/diagram.component';\r\nimport { ImageService } from '../images/image.service';\r\nimport { newConcept } from './newConcept.component';\r\nimport { TdDialogService } from '@covalent/core';\r\n\r\n@Component({\r\n  selector: \"main\",\r\n  templateUrl: \"./main.component.html\",\r\n  styleUrls: [\"./main.component.css\"]\r\n})\r\nexport class ChapterComponent {\r\n  chaptersPage: number;\r\n  chaptersOnce: number;\r\n  //-1 means not initialized, 0 means false, 1 means true\r\n  //we need to use -1 so we don't get the alert first time we try to get them\r\n\r\n  conceptsPage: Map<Chapter, number> = new Map();\r\n  conceptsOnce: Map<Chapter, boolean> = new Map();\r\n  //-1 means not initialized, 0 means false, 1 means true\r\n  //we need to use -1 so we don't get the alert first time we try to get them\r\n\r\n  chapterConcepts: Map<Chapter, Concept[]> = new Map();\r\n\r\n\r\n  constructor(private dialogService: TdDialogService,\r\n    private conceptDialog: MatDialog,\r\n    private diagramDialog: MatDialog,\r\n    private chapterService: ChapterService,\r\n    public loginService: LoginService,\r\n    public headerService: HeaderService,\r\n    private imageService: ImageService) {\r\n    this.chaptersPage = 0;\r\n    this.chaptersOnce = -1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getChapters();\r\n  }\r\n\r\n  getChapters() {\r\n    let once: number = this.chaptersOnce;\r\n    if ((once == -1) || (once == 0)) {\r\n      let page: number = this.chaptersPage++;\r\n      this.chapterService\r\n        .getChapters(page)\r\n        .subscribe(\r\n          (data: Page<Chapter>) => {\r\n            if ((data.numberOfElements === 0) && (once == 0)) {\r\n              this.chaptersOnce = 1;\r\n              this.dialogService.openAlert({\r\n                message: 'No hay más temas disponibles',\r\n                title: 'No hay más temas',\r\n                closeButton: 'Cerrar'\r\n              });\r\n            } else if (data.numberOfElements > 0) {\r\n              if (once == -1) {\r\n                this.chaptersOnce = 0;\r\n              }\r\n              this.addChapters(data);\r\n            }\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    }\r\n  }\r\n\r\n  addChapters(data: Page<Chapter>) {\r\n    for (let ch of data.content) {\r\n      //Set chapter first to keep ordering\r\n      console.log(this.chapterConcepts.get(ch));\r\n      if (!this.chapterConcepts.has(ch)) {\r\n        //console.log(this.chapterConcepts.has(ch));\r\n        this.chapterConcepts.set(ch, []);\r\n        if (!this.conceptsPage.has(ch)) { //add the chapter to both maps\r\n          this.conceptsPage.set(ch, -1);\r\n          this.conceptsOnce.set(ch, false);\r\n        }\r\n        this.getConcepts(ch);\r\n        //console.log(this.chapterConcepts);\r\n      }\r\n    }\r\n  }\r\n\r\n  getConcepts(chapter: Chapter) {\r\n    if (this.conceptsOnce.has(chapter)) {\r\n      let once: boolean = this.conceptsOnce.get(chapter)\r\n      let page: number = this.conceptsPage.get(chapter) + 1;\r\n      this.conceptsPage.set(chapter, page);\r\n      this.chapterService\r\n        .getConceptPerChapter(chapter.id, page)\r\n        .subscribe(\r\n          (data: Page<Concept>) => {\r\n            if ((data.numberOfElements === 0) && (once == true)) {\r\n              this.conceptsOnce.delete(chapter);\r\n              this.conceptsPage.delete(chapter);\r\n              this.dialogService.openAlert({\r\n                message: 'No hay más conceptos para ' + chapter.chapterName,\r\n                title: 'No hay más conceptos',\r\n                closeButton: 'Cerrar'\r\n              });\r\n            } else if (data.numberOfElements > 0) {\r\n              if (once == false) {\r\n                this.conceptsOnce.set(chapter, true);\r\n              }\r\n              this.addConcepts(chapter, data);\r\n            }\r\n          },\r\n          error => console.log(error)\r\n        );\r\n\r\n    }\r\n  }\r\n\r\n\r\n  addConcepts(chapter: Chapter, data: Page<Concept>) {\r\n    let conceptInfo = data.content;\r\n    for (let concept of conceptInfo) {\r\n      this.imageService.getImage(concept.id).subscribe(\r\n        (data: Blob) => this.imageService.createImageFromBlob(data, ((image) => concept.image = image)),\r\n        error => console.log(error)\r\n      )\r\n    }\r\n    conceptInfo = this.chapterConcepts.get(chapter).concat(data.content);\r\n    this.chapterConcepts.set(chapter, conceptInfo);\r\n  }\r\n\r\n  showDiagram() {\r\n    this.diagramDialog.open(DiagramComponent, {\r\n      height: \"600px\",\r\n      width: \"800px\"\r\n    });\r\n  }\r\n\r\n  showDialogNewConcept(id: number) {\r\n\r\n    const dialogRef = this.conceptDialog.open(newConcept, {\r\n      data: {\r\n        id: id\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(\r\n      result => {\r\n        let chapters = Array.from(this.chapterConcepts.keys());\r\n        let chapter: Chapter = chapters.find(j => j.id == id);\r\n        let concepts = this.chapterConcepts.get(chapter);\r\n        concepts.push(result);\r\n        this.chapterConcepts.set(chapter, concepts);\r\n      },\r\n      error => console.log(error)\r\n    );\r\n\r\n  }\r\n\r\n  deleteConcept(chapterId: number, conceptId: number) {\r\n    this.dialogService.openConfirm({\r\n      message: '¿Quieres eliminar este concepto?',\r\n      title: 'Confirmar',\r\n      acceptButton: 'Aceptar',\r\n      cancelButton: 'Cancelar',\r\n      width: '500px',\r\n      height: '175px'\r\n    }).afterClosed().subscribe((accept: boolean) => {\r\n      if (accept) {\r\n        this.chapterService\r\n          .deleteConcept(chapterId, conceptId)\r\n          .subscribe((_) => {\r\n            let chapters = Array.from(this.chapterConcepts.keys());\r\n            let chapter: Chapter = chapters.find(j => j.id == chapterId);\r\n            let concepts = this.chapterConcepts.get(chapter);\r\n            let concept: Concept = concepts.find(i => i.id == conceptId);\r\n            const index = concepts.indexOf(concept, 0);\r\n            if (index > -1) {\r\n              concepts.splice(index, 1);\r\n            }\r\n            this.chapterConcepts.set(chapter, concepts);\r\n          },\r\n            (error) => console.error(error + 'markedanswers on ans delete'));\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteChapter(chapter: Chapter) {\r\n    this.dialogService.openConfirm({\r\n      message: '¿Quieres eliminar este tema?',\r\n      title: 'Confirmar',\r\n      acceptButton: 'Aceptar',\r\n      cancelButton: 'Cancelar',\r\n      width: '500px',\r\n      height: '175px'\r\n    }).afterClosed().subscribe((accept: boolean) => {\r\n      if (accept) {\r\n        this.chapterService.deleteChapter(chapter.id).subscribe(\r\n          (_) => this.chapterConcepts.delete(chapter),\r\n          error => console.error(error)\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  addChapter() {\r\n    this.dialogService.openPrompt({\r\n      message: \"Elige un nombre para el tema: \",\r\n      title: \"Crear tema\",\r\n      acceptButton: \"Crear\",\r\n      cancelButton: \"Cancelar\",\r\n      width: '500px',\r\n      height: '250px'\r\n    }).afterClosed().subscribe((newChapterName: string) => {\r\n      if (newChapterName) {\r\n        this.chapterService.createChapter(newChapterName).subscribe(\r\n          (data: Chapter) => {this.chapterConcepts.set(data, []); console.log()},\r\n          error => console.error(error)\r\n        );\r\n      } else {\r\n        alert(\"Tienes que escribir un nombre para el tema en el campo de texto.\");\r\n      }\r\n    })\r\n  }\r\n}\r\n","import { Component, Inject} from \"@angular/core\";\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\nimport { Concept } from './concept.model';\r\nimport { ChapterService } from './chapter.service';\r\n\r\n@Component({\r\n    selector: 'dialogConcept',\r\n    templateUrl: './dialogConcept.component.html'\r\n  })\r\n\r\n  export class newConcept {\r\n\r\n    id: number;\r\n\r\n    conceptName: string;\r\n    URL: string;\r\n\r\n    constructor( public dialogRef: MatDialogRef<newConcept>, \r\n                @Inject(MAT_DIALOG_DATA) public data: any,\r\n                private chapterService: ChapterService) {\r\n        this.id = data[\"id\"];\r\n    }\r\n\r\n    newConcept(){\r\n      let concept: Concept = {\r\n          conceptName: this.conceptName,\r\n          URL: this.URL,\r\n      };\r\n      this.chapterService.addConcept(this.id,concept).subscribe(\r\n          data => this.dialogRef.close(data),\r\n          error => console.log(error)\r\n        );\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n\r\n  }","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable()\r\nexport class ImageService {\r\n  apiUrl = environment.baseUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getImage(conceptId: number) {\r\n    return this.http.get(this.apiUrl + \"/concepts/\" + conceptId + \"/image\", {\r\n      responseType: \"blob\"\r\n    });\r\n  }\r\n\r\n  postImage(image: Blob, conceptId: number) {\r\n    const formData: FormData = new FormData();\r\n    formData.append(\"file\", image);\r\n    return this.http.post(\r\n      this.apiUrl + \"/concepts/\" + conceptId + \"/image\",\r\n      formData\r\n    );\r\n  }\r\n\r\n  createImageFromBlob(image: Blob, callback: (arg0: string | ArrayBuffer) => void) {\r\n    let reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n       callback(reader.result);\r\n    }, false);\r\n \r\n    if (image) {\r\n       reader.readAsDataURL(image);\r\n    }\r\n }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Strategy based on http://jasonwatmore.com/post/2018/09/07/angular-6-basic-http-authentication-tutorial-example\r\n@Injectable()\r\nexport class BasicAuthInterceptor implements HttpInterceptor {\r\n    \r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n        // add authorization header with basic auth credentials if available\r\n        let user = JSON.parse(localStorage.getItem('currentUser'));\r\n        \r\n        if (user && user.authdata) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Basic ${user.authdata}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n \r\n    constructor(private loginService: LoginService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        console.log(\"Error intercepted\")\r\n        return next.handle(request).pipe(catchError(err => {\r\n            \r\n            if (err.status === 401) {\r\n                console.log(this.loginService.isLogged)\r\n                // auto logout if 401 response returned from api\r\n                this.loginService.removeCurrentUser();\r\n                //location.reload(true);\r\n                console.log(this.loginService.isLogged)\r\n\r\n            }\r\n            \r\n            return throwError(err);\r\n        }))\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { HeaderService } from \"../header/header.service\";\r\n\r\nconst URL = environment.baseUrl;\r\n\r\nexport interface User {\r\n  id?: number;\r\n  name: string;\r\n  roles: string[];\r\n  authdata: string;\r\n}\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  isLogged = false;\r\n  isTeacher = false;\r\n  user: User;\r\n  auth: string;\r\n\r\n  constructor(private http: HttpClient, private headerService: HeaderService) {\r\n    let user = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n    if (user) {\r\n      console.log(\"Logged user\");\r\n      this.setCurrentUser(user);\r\n    }\r\n  }\r\n\r\n  logIn(user: string, pass: string) {\r\n    let auth = window.btoa(user + \":\" + pass);\r\n\r\n    const headers = new HttpHeaders({\r\n      Authorization: \"Basic \" + auth,\r\n      \"X-Requested-With\": \"XMLHttpRequest\"\r\n    });\r\n\r\n    return this.http.get<User>(\"/api/logIn\", { headers }).pipe(\r\n      map(user => {\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          user.authdata = auth;\r\n          localStorage.setItem(\"currentUser\", JSON.stringify(user));\r\n        }\r\n\r\n        return user;\r\n      })\r\n    );\r\n  }\r\n\r\n  logOut() {\r\n    return this.http.get(URL + \"/logOut\").pipe(\r\n      map(response => {\r\n        this.removeCurrentUser();\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  private setCurrentUser(user: User) {\r\n    this.isLogged = true;\r\n    this.user = user;\r\n    this.isTeacher = this.user.roles.indexOf(\"ROLE_TEACHER\") !== -1;\r\n  }\r\n\r\n  removeCurrentUser() {\r\n    localStorage.removeItem(\"currentUser\");\r\n    this.isLogged = false;\r\n    this.isTeacher = false;\r\n    this.headerService.resetTabs();\r\n  }\r\n\r\n  signup(username: string, password: string) {\r\n    const headers = new HttpHeaders({\r\n      \"Content-Type\": \"application/json\"\r\n    });\r\n    const body = {\r\n      name: username,\r\n      password: password\r\n    };\r\n    return this.http.post<User>(URL + \"/register\", body, { headers });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Question } from \"./question.model\";\r\nimport { Page } from \"../page/page.model\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { LoginService } from \"../login/login.service\";\r\nimport { StudentAnswer } from \"./studentAnswer.model\";\r\nimport { Answer } from '../teacher/answer.model';\r\n\r\nconst BASE_URL = environment.baseUrl;\r\n\r\n@Injectable()\r\nexport class QuestionsService {\r\n  constructor(private http: HttpClient, private loginService: LoginService) {}\r\n\r\n  getMarkedQuestions(id: number, page: number) {\r\n    return this.http.get<Page<Question>>(\r\n      BASE_URL + \"/concepts/\" + id + \"/markedquestions\" + \"?page=\" + page,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  getUnmarkedQuestions(id: number, page: number) {\r\n    return this.http.get<Page<Question>>(\r\n      BASE_URL + \"/concepts/\" + id + \"/unmarkedquestions\" + \"?page=\" + page,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  getNewQuestion(id: number) {\r\n    return this.http.get<Question>(\r\n      BASE_URL + \"/concepts/\" + id + \"/newquestion\",\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  saveAnswer(\r\n    conceptId: number,\r\n    questionType: number,\r\n    answerText: string,\r\n    questionText: string,\r\n    answerId?: number,\r\n    justificationId?: number\r\n  ) {\r\n    let body: StudentAnswer = {\r\n      questionType: questionType,\r\n      questionText: questionText\r\n    }\r\n    if (questionType == 2 || questionType == 3) { // If question is a yes/no question\r\n      body.answerOption = answerText;\r\n    } else {\r\n      body.answerText = answerText;\r\n    }\r\n    if (answerId!=null)\r\n      body.answerId = answerId;\r\n    if (justificationId!=null)\r\n      body.justificationQuestionId = justificationId;\r\n    return this.http.post<Question>(\r\n      BASE_URL + \"/concepts/\" + conceptId + \"/saveanswer\",\r\n      body,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n}\r\n","module.exports = \".checkOverflow {\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n.studentContent {\\r\\n    padding-top: 2.5%;\\r\\n}\\r\\n\\r\\n.studentCard {\\r\\n    width: 48%;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\nmat-card-title {\\r\\n    text-align: center;\\r\\n    text-transform: uppercase;\\r\\n    padding-bottom: 2%;\\r\\n}\\r\\n\\r\\n.correctSize .mat-list-item {\\r\\n    height: auto;\\r\\n}\\r\\n\\r\\n.center {\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n.question {\\r\\n    width: 50%;\\r\\n    padding-top: 2%;\\r\\n    padding-bottom: 2%;\\r\\n}\\r\\n\\r\\n.answer {\\r\\n    width: 40%;\\r\\n    text-align: center;\\r\\n    padding-top: 2%;\\r\\n    padding-bottom: 2%;\\r\\n}\\r\\n\\r\\n.icon {\\r\\n    width: 10%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\nbutton[color=\\\"primary\\\"] {\\r\\n    margin: 10px\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLFVBQVU7SUFDVixlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2Ysa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9zdHVkZW50L3N0dWRlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGVja092ZXJmbG93IHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4uc3R1ZGVudENvbnRlbnQge1xyXG4gICAgcGFkZGluZy10b3A6IDIuNSU7XHJcbn1cclxuXHJcbi5zdHVkZW50Q2FyZCB7XHJcbiAgICB3aWR0aDogNDglO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbm1hdC1jYXJkLXRpdGxlIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMiU7XHJcbn1cclxuXHJcbi5jb3JyZWN0U2l6ZSAubWF0LWxpc3QtaXRlbSB7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi5jZW50ZXIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ucXVlc3Rpb24ge1xyXG4gICAgd2lkdGg6IDUwJTtcclxuICAgIHBhZGRpbmctdG9wOiAyJTtcclxuICAgIHBhZGRpbmctYm90dG9tOiAyJTtcclxufVxyXG5cclxuLmFuc3dlciB7XHJcbiAgICB3aWR0aDogNDAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDIlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDIlO1xyXG59XHJcblxyXG4uaWNvbiB7XHJcbiAgICB3aWR0aDogMTAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG5idXR0b25bY29sb3I9XCJwcmltYXJ5XCJdIHtcclxuICAgIG1hcmdpbjogMTBweFxyXG59Il19 */\"","module.exports = \"<div class=\\\"checkOverflow studentContent\\\">\\r\\n\\r\\n    <mat-card class=\\\"studentCard\\\">\\r\\n        <mat-card-title>Preguntas corregidas</mat-card-title>\\r\\n        <mat-nav-list *ngIf=\\\"markedQuestions?.length == 0\\\" role=\\\"list\\\" class=\\\"correctSize\\\">\\r\\n            <mat-card-content>No hay preguntas corregidas</mat-card-content>\\r\\n        </mat-nav-list>\\r\\n        <mat-card-content *ngIf=\\\"markedQuestions?.length > 0\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSourceMarked\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <ng-container matColumnDef=\\\"questionText\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"center\\\"> Pregunta </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"question\\\"> {{element.questionText}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"userResponse\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"center\\\"> Respuesta </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"answer\\\">\\r\\n                        <div *ngIf=\\\"element.yesNoQuestion\\\">\\r\\n                            <span *ngIf=\\\"element.userResponse\\\">Sí</span>\\r\\n                            <span *ngIf=\\\"!element.userResponse\\\">No</span>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!element.yesNoQuestion\\\">\\r\\n                            <div *ngIf=\\\"!element.justification\\\">\\r\\n                                <span>{{element.answer.answerText}}</span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"element.justification\\\">\\r\\n                                <span>{{element.justification.justificationText}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"correct\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"center\\\"> Correccion </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"icon\\\">\\r\\n                        <mat-icon *ngIf=\\\"element.correct\\\">check</mat-icon>\\r\\n                        <mat-icon *ngIf=\\\"!element.correct\\\">clear</mat-icon>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsMarked\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsMarked;\\\"></tr>\\r\\n            </table>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"getMarkedQuestions()\\\">\\r\\n                <span>Mostrar más</span>\\r\\n            </button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n\\r\\n    <mat-card class=\\\"studentCard\\\">\\r\\n        <mat-card-title>Preguntas por corregir</mat-card-title>\\r\\n        <mat-nav-list *ngIf=\\\"unmarkedQuestions?.length == 0\\\" role=\\\"list\\\" class=\\\"correctSize\\\">\\r\\n            <mat-card-content>No hay preguntas por corregir</mat-card-content>\\r\\n        </mat-nav-list>\\r\\n        <mat-card-content *ngIf=\\\"unmarkedQuestions?.length > 0\\\">\\r\\n            <table mat-table [dataSource]=\\\"dataSourceUnmarked\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                <ng-container matColumnDef=\\\"questionText\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"center\\\"> Pregunta </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"question\\\"> {{element.questionText}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"userResponse\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef class=\\\"center\\\"> Respuesta </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"answer\\\">\\r\\n                        <div *ngIf=\\\"element.yesNoQuestion\\\">\\r\\n                            <span *ngIf=\\\"element.userResponse\\\">Sí</span>\\r\\n                            <span *ngIf=\\\"!element.userResponse\\\">No</span>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!element.yesNoQuestion\\\">\\r\\n                            <div *ngIf=\\\"!element.justification\\\">\\r\\n                                <span>{{element.answer.answerText}}</span>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"element.justification\\\">\\r\\n                                <span>{{element.justification.justificationText}}</span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                </ng-container>\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsUnmarked\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsUnmarked;\\\"></tr>\\r\\n            </table>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions>\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"getUnmarkedQuestions()\\\">\\r\\n                <span>Mostrar más</span>\\r\\n            </button>\\r\\n        </mat-card-actions>\\r\\n    </mat-card>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div align=\\\"center\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"getNewQuestion()\\\"\\r\\n        >\\r\\n        <mat-icon>add</mat-icon>\\r\\n    </button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"align-center\\\" (click)=\\\"showDiagram()\\\">\\r\\n        Diagrama\\r\\n    </button>\\r\\n</div>\"","import { Component, ViewChild } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { MatTableDataSource, MatDialog, MatPaginator } from \"@angular/material\";\r\nimport { OnInit } from \"@angular/core\";\r\n\r\nimport { QuestionsService } from \"./question.service\";\r\nimport { Question } from \"./question.model\";\r\nimport { Answer } from \"../teacher/answer.model\";\r\nimport { Justification } from \"../teacher/justification.model\";\r\nimport { Page } from \"../page/page.model\";\r\nimport { DiagramComponent } from \"../diagram/diagram.component\";\r\n\r\nimport { TdDialogService } from \"@covalent/core\";\r\nimport { YesNoDialogComponent } from \"./yesNoDialog.component\";\r\n\r\n@Component({\r\n  selector: \"student\",\r\n  templateUrl: \"./student.component.html\",\r\n  styleUrls: [\"./student.component.css\"]\r\n})\r\nexport class StudentComponent {\r\n  markedQuestions: Question[] = [];\r\n  markedQuestionsPage: number;\r\n  markedOnce: number;\r\n  //-1 means not initialized, 0 means false, 1 means true\r\n  //we need to use -1 so we don't get the alert first time we try to get them\r\n\r\n  unmarkedQuestions: Question[] = [];\r\n  unmarkedQuestionsPage: number;\r\n  unmarkedOnce: number;\r\n  //-1 means not initialized, 0 means false, 1 means true\r\n  //we need to use -1 so we don't get the alert first time we try to get them\r\n\r\n  id: number;\r\n\r\n  displayedColumnsMarked: string[] = [\r\n    \"questionText\",\r\n    \"userResponse\",\r\n    \"correct\"\r\n  ];\r\n  dataSourceMarked: MatTableDataSource<Question>;\r\n  displayedColumnsUnmarked: string[] = [\"questionText\", \"userResponse\"];\r\n  dataSourceUnmarked: MatTableDataSource<Question>;\r\n  //@ViewChild(MatPaginator) markedPaginator: MatPaginator;\r\n  //@ViewChild(MatPaginator) unmarkedPaginator: MatPaginator;\r\n\r\n  constructor(\r\n    private dialogs: MatDialog,\r\n    private router: Router,\r\n    activatedRoute: ActivatedRoute,\r\n    private questionsService: QuestionsService,\r\n    private dialogService: TdDialogService\r\n  ) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n      return false;\r\n    };\r\n    this.id = activatedRoute.snapshot.params[\"id\"];\r\n    this.markedQuestionsPage = 0;\r\n    this.markedOnce = -1;\r\n    this.unmarkedQuestionsPage = 0;\r\n    this.unmarkedOnce = -1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMarkedQuestions();\r\n    this.getUnmarkedQuestions();\r\n  }\r\n\r\n  getMarkedQuestions() {\r\n    let once: number = this.markedOnce;\r\n    if (once == -1 || once == 0) {\r\n      let page: number = this.markedQuestionsPage++;\r\n      this.questionsService.getMarkedQuestions(this.id, page).subscribe(\r\n        (data: Page<Question>) => {\r\n          if (data.numberOfElements === 0 && once == 0) {\r\n            this.markedOnce = 1;\r\n            this.dialogService.openAlert({\r\n              message: \"No hay más preguntas corregidas\",\r\n              title: \"No hay más preguntas\",\r\n              closeButton: \"Cerrar\"\r\n            });\r\n          } else if (data.numberOfElements > 0) {\r\n            if (once == -1) {\r\n              this.markedOnce = 0;\r\n            }\r\n            this.markedQuestions = this.markedQuestions.concat(data.content);\r\n            this.dataSourceMarked = new MatTableDataSource(\r\n              this.markedQuestions\r\n            );\r\n          }\r\n        },\r\n        error => console.log(error)\r\n      );\r\n    }\r\n  }\r\n\r\n  getUnmarkedQuestions() {\r\n    let once: number = this.unmarkedOnce;\r\n    if (once == -1 || once == 0) {\r\n      let page: number = this.unmarkedQuestionsPage++;\r\n      this.questionsService.getUnmarkedQuestions(this.id, page).subscribe(\r\n        (data: Page<Question>) => {\r\n          if (data.numberOfElements === 0 && once == 0) {\r\n            this.unmarkedOnce = 1;\r\n            this.dialogService.openAlert({\r\n              message: \"No hay más preguntas por corregir\",\r\n              title: \"No hay más preguntas\",\r\n              closeButton: \"Cerrar\"\r\n            });\r\n          } else if (data.numberOfElements > 0) {\r\n            if (once == -1) {\r\n              this.unmarkedOnce = 0;\r\n            }\r\n            this.unmarkedQuestions = this.unmarkedQuestions.concat(\r\n              data.content\r\n            );\r\n            this.dataSourceUnmarked = new MatTableDataSource(\r\n              this.unmarkedQuestions\r\n            );\r\n          }\r\n        },\r\n        error => console.log(error)\r\n      );\r\n    }\r\n  }\r\n\r\n  showDiagram() {\r\n    this.dialogs.open(DiagramComponent, {\r\n      height: \"600px\",\r\n      width: \"800px\"\r\n    });\r\n  }\r\n\r\n  getNewQuestion() {\r\n    this.questionsService.getNewQuestion(this.id).subscribe(\r\n      data => {\r\n        if (data.yesNoQuestion) {\r\n          this.dialogs\r\n            .open(YesNoDialogComponent, {\r\n              width: \"800px\",\r\n              data: {\r\n                questionText: data.questionText\r\n              }\r\n            })\r\n            .afterClosed()\r\n            .subscribe((answer: string) => {\r\n              if (answer) {\r\n                if (data.justification)\r\n                  this.saveAnswer(\r\n                    data.type,\r\n                    answer,\r\n                    data.questionText,\r\n                    data.answer.id,\r\n                    data.justification.id\r\n                  );\r\n                else if (data.answer)\r\n                  this.saveAnswer(\r\n                    data.type,\r\n                    answer,\r\n                    data.questionText,\r\n                    data.answer.id\r\n                  );\r\n                else this.saveAnswer(data.type, answer, data.questionText);\r\n              }\r\n            });\r\n        } else {\r\n          this.dialogService\r\n            .openPrompt({\r\n              message: data.questionText,\r\n              title: \"Pregunta\",\r\n              cancelButton: \"Cancelar\",\r\n              acceptButton: \"Enviar\"\r\n            })\r\n            .afterClosed()\r\n            .subscribe((answer: string) => {\r\n              if (answer) {\r\n                if (data.justification)\r\n                  this.saveAnswer(\r\n                    data.type,\r\n                    answer,\r\n                    data.questionText,\r\n                    data.answer.id,\r\n                    data.justification.id\r\n                  );\r\n                else if (data.answer)\r\n                  this.saveAnswer(\r\n                    data.type,\r\n                    answer,\r\n                    data.questionText,\r\n                    data.answer.id\r\n                  );\r\n                else this.saveAnswer(data.type, answer, data.questionText);\r\n              }\r\n            });\r\n        }\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  saveAnswer(\r\n    questionType: number,\r\n    answerText: string,\r\n    questionText: string,\r\n    answerId?: number,\r\n    justificationId?: number\r\n  ) {\r\n    if (justificationId != null)\r\n      this.questionsService\r\n        .saveAnswer(\r\n          this.id,\r\n          questionType,\r\n          answerText,\r\n          questionText,\r\n          answerId,\r\n          justificationId\r\n        )\r\n        .subscribe(\r\n          data => {\r\n            console.log(questionText);\r\n            console.log(data);\r\n            this.addNewQuestion(data);\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    else if (answerId != null)\r\n      this.questionsService\r\n        .saveAnswer(this.id, questionType, answerText, questionText, answerId)\r\n        .subscribe(\r\n          data => {\r\n            console.log(questionText);\r\n            console.log(data);\r\n            this.addNewQuestion(data);\r\n          },\r\n          error => console.log(error)\r\n        );\r\n    else\r\n      this.questionsService\r\n        .saveAnswer(this.id, questionType, answerText, questionText, answerId)\r\n        .subscribe(\r\n          data => {\r\n            console.log(questionText);\r\n            console.log(data);\r\n            this.addNewQuestion(data);\r\n          },\r\n          error => console.log(error)\r\n        );\r\n  }\r\n\r\n  addNewQuestion(data: Question) {\r\n    let question: Question;\r\n    if (data.type == 2 || data.type == 3) {\r\n      question = {\r\n        questionText: data.questionText,\r\n        type: data.type,\r\n        userResponse: data.userResponse,\r\n        marked: false,\r\n        yesNoQuestion: true,\r\n        correct: data.correct\r\n      };\r\n      this.markedQuestions.push(question);\r\n      this.dataSourceMarked = new MatTableDataSource(this.markedQuestions);\r\n    } else {\r\n      if (data.type == 0) {\r\n        let ans: Answer = {\r\n          answerText: data.answer.answerText,\r\n          marked: false,\r\n          correct: false\r\n        };\r\n        question = {\r\n          questionText: data.questionText,\r\n          type: data.type,\r\n          userResponse: true,\r\n          marked: false,\r\n          yesNoQuestion: false,\r\n          correct: false,\r\n          answer: ans\r\n        };\r\n      } else if (data.type == 1) {\r\n        let jus: Justification = {\r\n          justificationText: data.justification.justificationText,\r\n          marked: false,\r\n          valid: false,\r\n          error: \"\"\r\n        };\r\n        question = {\r\n          questionText: data.questionText,\r\n          type: data.type,\r\n          userResponse: true,\r\n          marked: false,\r\n          yesNoQuestion: false,\r\n          correct: false,\r\n          justification: jus\r\n        };\r\n      }\r\n      this.unmarkedQuestions.push(question);\r\n      this.dataSourceUnmarked = new MatTableDataSource(this.unmarkedQuestions);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Pregunta</h1>\\r\\n  <p>{{ data.questionText }}</p>\\r\\n    <mat-radio-group #radioGroup=\\\"matRadioGroup\\\">\\r\\n      <mat-radio-button value=\\\"yes\\\" (click)=\\\"checkRadio()\\\">Sí</mat-radio-button>\\r\\n      <br>\\r\\n      <mat-radio-button value=\\\"no\\\" (click)=\\\"checkRadio()\\\">No</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n  <button mat-button color=\\\"primary\\\" mat-dialog-close>\\r\\n    Cancelar\\r\\n  </button>\\r\\n  <button mat-button color=\\\"primary\\\" [disabled]=\\\"disable\\\" [mat-dialog-close]=\\\"radioGroup.value\\\">\\r\\n    Enviar\\r\\n  </button>\\r\\n</mat-dialog-actions>\\r\\n\"","import { Component, Inject } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material\";\r\n\r\n@Component({\r\n  selector: \"yesnodialog\",\r\n  templateUrl: \"yesNoDialog.component.html\",\r\n  styles: [`\r\n  mat-radio-button {\r\n    margin-bottom: 5px\r\n  }\r\n  `]\r\n})\r\nexport class YesNoDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<YesNoDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {}\r\n\r\n  disable: boolean = true;\r\n  checkRadio(){\r\n    this.disable = false;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { catchError, timeout } from \"rxjs/operators\";\r\n\r\nimport { Answer } from \"./answer.model\";\r\nimport { Page } from \"../page/page.model\";\r\nimport { LoginService } from \"../login/login.service\";\r\n\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n//It will be necessary to access the user information by a new service\r\n\r\n@Injectable()\r\nexport class AnswerService {\r\n  constructor(private http: HttpClient, private loginService: LoginService) {}\r\n  apiUrl = environment.baseUrl;\r\n  headers = new HttpHeaders({\r\n    \"Content-Type\": \"application/json\"\r\n  });\r\n  getMarkedAnswers(id: number, page: number) {\r\n    return this.http.get<Page<Answer>>(\r\n      this.apiUrl + \"/concepts/\" + id + \"/markedanswers\" + \"?page=\" + page,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  getUnmarkedAnswers(id: number, page: number) {\r\n    return this.http.get<Page<Answer>>(\r\n      this.apiUrl + \"/concepts/\" + id + \"/unmarkedanswers\" + \"?page=\" + page,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  removeAnswer(answerId: number, conceptId: number): Observable<Answer> {\r\n    return this.http\r\n      .delete<Answer>(\r\n        this.apiUrl + \"/concepts/\" + conceptId + \"/answers/\" + answerId\r\n      )\r\n      .pipe(catchError(error => this.handleError(error)));\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.error(error);\r\n    return throwError(\r\n      new Error(\"Server error (\" + error.status + \"): \" + error)\r\n    );\r\n  }\r\n\r\n  postNewAnswer(id: number, answer: Answer) {\r\n    return this.http.post(\r\n      this.apiUrl + \"/concepts/\" + id + \"/answers\",\r\n      answer,\r\n      { withCredentials: true }\r\n    );\r\n  }\r\n\r\n  editAnswer(conceptId: number, answerId: number, answerText: string, correct: boolean) {\r\n    let body = {\r\n      answerText: answerText,\r\n      correct: correct\r\n    };\r\n    return this.http.put(\r\n      this.apiUrl + \"/concepts/\" + conceptId + \"/answers/\" + answerId,\r\n      body,\r\n      { headers: this.headers, withCredentials: true }\r\n    );\r\n  }\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Nueva respuesta</h1>\\r\\n<div mat-dialog-content>\\r\\n    <form class=\\\"newAnswer\\\">\\r\\n        <p class=\\\"padding\\\">Respuesta:</p>\\r\\n        <mat-form-field>\\r\\n            <input matInput [(ngModel)]=\\\"answerText\\\" name=\\\"answerText\\\">\\r\\n        </mat-form-field>\\r\\n        <mat-radio-group aria-label=\\\"Selecciona una opción\\\" class=\\\"padding\\\" [(ngModel)]=\\\"correct\\\" name=\\\"correct\\\">\\r\\n            <mat-radio-button value=\\\"true\\\">Correcta</mat-radio-button>\\r\\n            <mat-radio-button value=\\\"false\\\">Incorrecta</mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n        <div *ngIf=\\\"correct\\\">\\r\\n            <p class=\\\"padding\\\">Justificacion: </p>\\r\\n            <mat-form-field>\\r\\n                <input matInput class=\\\"padding\\\" [(ngModel)]=\\\"justificationText\\\" name=\\\"justificationText\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-radio-group aria-label=\\\"Selecciona una opción\\\" class=\\\"padding\\\" [(ngModel)]=\\\"validJustification\\\"\\r\\n                name=\\\"validJustification\\\">\\r\\n                <mat-radio-button value=\\\"true\\\">Valida</mat-radio-button>\\r\\n                <mat-radio-button value=\\\"false\\\">Invalida</mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"validJustification\\\">\\r\\n            <p class=\\\"padding\\\">Error: </p>\\r\\n            <mat-form-field>\\r\\n                <input matInput class=\\\"padding\\\" [(ngModel)]=\\\"error\\\" name=\\\"error\\\">\\r\\n            </mat-form-field>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button [disabled]=\\\"(!correct) || (!answerText)\\\" (click)=\\\"newAnswer()\\\" cdkFocusInitial>Aceptar</button>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancelar</button>\\r\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Nueva Justificación</h1>\\r\\n<div mat-dialog-content>\\r\\n    <form>\\r\\n        <p class=\\\"padding\\\">Justificación:</p>\\r\\n        <mat-form-field>\\r\\n                <input matInput [(ngModel)]=\\\"justificationText\\\" name=\\\"justificationText\\\">\\r\\n        </mat-form-field>\\r\\n            <mat-radio-group aria-label=\\\"Selecciona una opción\\\" class=\\\"padding\\\" [(ngModel)]=\\\"validJustification\\\" name=\\\"validJustification\\\"> \\r\\n                <mat-radio-button value=\\\"true\\\">Valida</mat-radio-button>\\r\\n                <mat-radio-button value=\\\"false\\\">Invalida</mat-radio-button>\\r\\n            </mat-radio-group>\\r\\n            <p class=\\\"padding\\\">Error: </p>\\r\\n            <mat-form-field>\\r\\n                <input matInput class=\\\"padding\\\" [(ngModel)]=\\\"error\\\" name=\\\"error\\\">\\r\\n            </mat-form-field>\\r\\n    </form>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n    <button mat-button (click)=\\\"newJustification()\\\" cdkFocusInitial>Aceptar</button>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">Cancelar</button>\\r\\n</div>\"","module.exports = \".imageList {\\r\\n    vertical-align: middle;\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n    margin: 20px;\\r\\n}\\r\\ntd-file-upload {\\r\\n    display: inline-block\\r\\n}\\r\\nimg {\\r\\n    border: 1px solid black;\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhY2hlci9pbWFnZXBvc3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksc0JBQXNCO0lBQ3RCLFlBQVk7SUFDWixhQUFhO0lBQ2IsWUFBWTtBQUNoQjtBQUNBO0lBQ0k7QUFDSjtBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvdGVhY2hlci9pbWFnZXBvc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmltYWdlTGlzdCB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxuICAgIG1hcmdpbjogMjBweDtcclxufVxyXG50ZC1maWxlLXVwbG9hZCB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2tcclxufVxyXG5cclxuaW1nIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgaGVpZ2h0OiAxMDBweDtcclxufSJdfQ== */\"","module.exports = \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Imagen</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <img class=\\\"imageList\\\" [src]=\\\"this.image\\\">\\r\\n  <td-file-upload\\r\\n    #singleFileUpload\\r\\n    (upload)=\\\"uploadEvent($event)\\\"\\r\\n    required\\r\\n  >\\r\\n    <mat-icon>file_upload</mat-icon\\r\\n    ><span>{{ singleFileUpload.value?.name }}</span>\\r\\n    <ng-template td-file-input-label>\\r\\n      <mat-icon>attach_file</mat-icon>\\r\\n      <span>Selecciona una imagen...</span>\\r\\n      <span [hidden]=\\\"!singleFileUpload?.required\\\"></span>\\r\\n    </ng-template>\\r\\n  </td-file-upload>\\r\\n</mat-card>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { ImageService } from \"../images/image.service\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"imageposter\",\r\n  templateUrl: \"./imageposter.component.html\",\r\n  styleUrls: [\"./imageposter.component.css\"]\r\n})\r\nexport class ImagePosterComponent {\r\n  conceptId: number;\r\n  image: any;\r\n\r\n  constructor(\r\n    public imageService: ImageService,\r\n    private activatedRoute: ActivatedRoute\r\n  ) {\r\n    this.conceptId = activatedRoute.snapshot.params[\"id\"];\r\n    this.loadImage();\r\n  }\r\n\r\n  uploadEvent(file: File): void {\r\n    this.imageService.postImage(file, this.conceptId).subscribe(\r\n        (data) => {\r\n            this.loadImage();\r\n        },\r\n        (error: Error) => this.loadImage(),\r\n    );\r\n  }\r\n\r\n  loadImage(){\r\n    this.imageService.getImage(this.conceptId).subscribe(\r\n        (data: Blob) => this.imageService.createImageFromBlob(data, ((image) => this.image = image)),\r\n        error => console.log(error)\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { Justification } from \"./justification.model\";\r\n\r\nimport { Page } from \"../page/page.model\";\r\nimport { LoginService } from \"../login/login.service\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\nconst BASE_URL = environment.baseUrl;\r\n\r\n//It will be necessary to access the user information by a new service\r\n\r\n@Injectable()\r\nexport class JustificationService {\r\n   constructor(private http: HttpClient, private loginService: LoginService) { }\r\n\r\n   apiUrl = environment.baseUrl;\r\n   headers = new HttpHeaders({\r\n      \"Content-Type\": \"application/json\"\r\n    });\r\n   getUnmarkedJustifications(id: number, page: number) { //This methods gets us the answers that have at least 1\r\n      return this.http.get<Page<Justification>>(\r\n         this.apiUrl + \"/concepts/\" + id + \"/unmarkedjustifications\" + \"?page=\" + page,\r\n         { withCredentials: true }\r\n      );\r\n   }\r\n\r\n   getMarkedJustificationsByAnswer(conceptId: number, answerId: number, page: number){\r\n      return this.http.get<Page<Justification>>(\r\n         this.apiUrl + \"/concepts/\" + conceptId + \"/answers/\" + answerId + \"/markedjustifications\" + \"?page=\" + page,\r\n         { withCredentials: true }\r\n      );\r\n   }\r\n\r\n   removeJustification(justId: number, answerId: number): Observable<Justification> {\r\n      return this.http\r\n         .delete<Justification>(this.apiUrl + '/answers/' + answerId + '/justifications/' + justId)\r\n         .pipe(\r\n            catchError((error: any) => {\r\n               if (error.status === 400) {\r\n                  return throwError(error.status);\r\n               }\r\n               else {\r\n                  this.handleError(error);\r\n               }\r\n            }));\r\n   }\r\n\r\n\r\n   private handleError(error: any) {\r\n      console.error(error);\r\n      return throwError(new Error('Server error (' + error.status + '): ' + error));\r\n   }\r\n\r\n   postNewJustification(id: number, just: Justification) {\r\n      return this.http.post(\r\n         this.apiUrl + \"/answers/\" + id + \"/justifications\",\r\n         just,\r\n         { withCredentials: true }\r\n      );\r\n   }\r\n\r\n   markJustification(answerId, justId, valid, errorText?) {\r\n      let body = {\r\n         valid: valid\r\n      }\r\n      if (errorText) {\r\n         body[\"errorText\"] = errorText\r\n      }\r\n      return this.http.put(\r\n         this.apiUrl + \"/answers/\" + answerId + \"/correct/\" + justId, body, {headers: this.headers, withCredentials:true}\r\n      )\r\n   }\r\n}","module.exports = \".padding {\\r\\n   padding-top: 1%;\\r\\n}\\r\\n\\r\\nmat-form-field {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nmat-radio-button {\\r\\n    margin-left: 16px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhY2hlci9uZXdhbnN3ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtHQUNHLGVBQWU7QUFDbEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC90ZWFjaGVyL25ld2Fuc3dlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBhZGRpbmcge1xyXG4gICBwYWRkaW5nLXRvcDogMSU7XHJcbn1cclxuXHJcbm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5tYXQtcmFkaW8tYnV0dG9uIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxNnB4O1xyXG59Il19 */\"","import { Component, Inject } from \"@angular/core\";\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material'\r\n\r\nimport { Answer } from \"./answer.model\";\r\nimport { AnswerService } from \"./answer.service\";\r\nimport { Justification } from './justification.model';\r\nimport { JustificationService } from \"./justification.service\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'dialogAnswer',\r\n  templateUrl: './dialogAnswer.component.html',\r\n  styleUrls: [\"./newanswer.component.css\"]\r\n})\r\n\r\nexport class NewAnswerComponent {\r\n\r\n  id: number;\r\n  answerText: string;\r\n  correct: boolean;\r\n  marked: boolean = true;\r\n\r\n  justificationText: string;\r\n  markedJustification: boolean = true;\r\n  validJustification: boolean;\r\n  error: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<NewAnswerComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private answerService: AnswerService,\r\n    private justificationService: JustificationService) {\r\n    this.id = data[\"id\"];\r\n  }\r\n\r\n  newAnswer() {\r\n    let justificationArray = [];\r\n    let justification: Justification;\r\n    if (this.validJustification !== false) {\r\n      justification = {\r\n        justificationText: this.justificationText,\r\n        marked: this.markedJustification,\r\n        valid: this.validJustification,\r\n        error: this.error,\r\n      };\r\n    } else {\r\n      justification = {\r\n        justificationText: this.justificationText,\r\n        marked: this.markedJustification,\r\n        valid: this.validJustification,\r\n      };\r\n    }\r\n\r\n    if (justification.justificationText != null) {\r\n      justificationArray.push(justification);\r\n    }\r\n    let answer: Answer = {\r\n      answerText: this.answerText,\r\n      marked: this.marked,\r\n      correct: this.correct,\r\n      justifications: justificationArray\r\n    };\r\n    this.answerService.postNewAnswer(this.id, answer).subscribe(\r\n      data => this.dialogRef.close(data),\r\n      error => console.log(error)\r\n    );\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}","module.exports = \".padding {\\r\\n    padding-top: 1%;\\r\\n }\\r\\n \\r\\n mat-form-field {\\r\\n     width: 100%;\\r\\n }\\r\\n \\r\\n mat-radio-button {\\r\\n     margin-left: 16px;\\r\\n }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhY2hlci9uZXdqdXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0NBQ2xCOztDQUVBO0tBQ0ksV0FBVztDQUNmOztDQUVBO0tBQ0ksaUJBQWlCO0NBQ3JCIiwiZmlsZSI6InNyYy9hcHAvdGVhY2hlci9uZXdqdXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFkZGluZyB7XHJcbiAgICBwYWRkaW5nLXRvcDogMSU7XHJcbiB9XHJcbiBcclxuIG1hdC1mb3JtLWZpZWxkIHtcclxuICAgICB3aWR0aDogMTAwJTtcclxuIH1cclxuIFxyXG4gbWF0LXJhZGlvLWJ1dHRvbiB7XHJcbiAgICAgbWFyZ2luLWxlZnQ6IDE2cHg7XHJcbiB9Il19 */\"","import { Component, Inject} from \"@angular/core\";\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material'\r\nimport { Justification } from './justification.model';\r\nimport { JustificationService } from \"./justification.service\";\r\n\r\n\r\n\r\n@Component({\r\nselector: 'dialogJust',\r\ntemplateUrl: './dialogJust.component.html',\r\nstyleUrls: [\"./newjust.component.css\"]\r\n})\r\nexport class NewJustComponent {\r\n\r\n    id: number;\r\n    justificationText: string;\r\n    validJustification : boolean;\r\n    error: string;\r\n\r\n    constructor( public dialogRef: MatDialogRef<NewJustComponent>, \r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private justificationService: JustificationService) {\r\n    this.id = data[\"id\"];\r\n    }\r\n    newJustification(){\r\n        let justification: Justification = {\r\n            justificationText: this.justificationText,\r\n            valid: this.validJustification,\r\n            error: this.error,\r\n            marked: true\r\n        };\r\n        this.justificationService.postNewJustification(this.id, justification).subscribe(\r\n            data =>this.dialogRef.close(data),\r\n            error => console.log(error)\r\n        );\r\n    }\r\n    onNoClick(){\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","module.exports = \".checkOverflow {\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\ntextarea {\\r\\n    resize: none;\\r\\n    text-rendering: auto;\\r\\n    color: initial;\\r\\n    letter-spacing: normal;\\r\\n    word-spacing: normal;\\r\\n    text-transform: none;\\r\\n    text-indent: 0px;\\r\\n    text-shadow: none;\\r\\n    display: inline-block;\\r\\n    text-align: start;\\r\\n    margin: 0em;\\r\\n    font: 400 13.3333px Arial;\\r\\n}\\r\\n\\r\\n.teacherContent {\\r\\n    padding-top: 2.5%;\\r\\n}\\r\\n\\r\\n.teacherCard {\\r\\n    font-size: 100%;\\r\\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif\\r\\n}\\r\\n\\r\\nmat-card-title {\\r\\n    text-align: left;\\r\\n    text-transform: uppercase;\\r\\n    padding-bottom: 2%;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n\\r\\nmat-nav-list{\\r\\n    background-color: lightgray;\\r\\n}\\r\\n\\r\\nmat-card-actions{\\r\\n    color: blue;\\r\\n}\\r\\n\\r\\nmat-card-subtitle{\\r\\n    font: arial;\\r\\n    font-size: 80%;\\r\\n}\\r\\n\\r\\n.correctSize .mat-list-item {\\r\\n    height: auto;\\r\\n    font-family: sans-serif;\\r\\n}\\r\\n\\r\\n.answer{\\r\\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\\r\\n    float: left;\\r\\n    width: 80%;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.question {\\r\\n    float: left;\\r\\n    width: 50%;\\r\\n}\\r\\n\\r\\n.icon {\\r\\n    float: left;\\r\\n    width: 10%;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    width:90%\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    margin: 5px\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhY2hlci90ZWFjaGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLG9CQUFvQjtJQUNwQixjQUFjO0lBQ2Qsc0JBQXNCO0lBQ3RCLG9CQUFvQjtJQUNwQixvQkFBb0I7SUFDcEIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxlQUFlO0lBQ2Y7QUFDSjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCLHlDQUF5QztBQUM3Qzs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0FBQ2xCOztBQUdBO0lBQ0ksWUFBWTtJQUNaLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLGdEQUFnRDtJQUNoRCxXQUFXO0lBQ1gsVUFBVTtJQUNWLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0k7QUFDSjs7QUFFQTtJQUNJO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC90ZWFjaGVyL3RlYWNoZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGVja092ZXJmbG93IHtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICByZXNpemU6IG5vbmU7XHJcbiAgICB0ZXh0LXJlbmRlcmluZzogYXV0bztcclxuICAgIGNvbG9yOiBpbml0aWFsO1xyXG4gICAgbGV0dGVyLXNwYWNpbmc6IG5vcm1hbDtcclxuICAgIHdvcmQtc3BhY2luZzogbm9ybWFsO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbiAgICB0ZXh0LWluZGVudDogMHB4O1xyXG4gICAgdGV4dC1zaGFkb3c6IG5vbmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB0ZXh0LWFsaWduOiBzdGFydDtcclxuICAgIG1hcmdpbjogMGVtO1xyXG4gICAgZm9udDogNDAwIDEzLjMzMzNweCBBcmlhbDtcclxufVxyXG5cclxuLnRlYWNoZXJDb250ZW50IHtcclxuICAgIHBhZGRpbmctdG9wOiAyLjUlO1xyXG59XHJcblxyXG4udGVhY2hlckNhcmQge1xyXG4gICAgZm9udC1zaXplOiAxMDAlO1xyXG4gICAgZm9udC1mYW1pbHk6ICdHaWxsIFNhbnMnLCAnR2lsbCBTYW5zIE1UJywgQ2FsaWJyaSwgJ1RyZWJ1Y2hldCBNUycsIHNhbnMtc2VyaWZcclxufVxyXG5cclxubWF0LWNhcmQtdGl0bGUge1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMiU7XHJcbiAgICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxubWF0LW5hdi1saXN0e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xyXG59XHJcblxyXG5tYXQtY2FyZC1hY3Rpb25ze1xyXG4gICAgY29sb3I6IGJsdWU7XHJcbn1cclxuXHJcbm1hdC1jYXJkLXN1YnRpdGxle1xyXG4gICAgZm9udDogYXJpYWw7XHJcbiAgICBmb250LXNpemU6IDgwJTtcclxufVxyXG5cclxuXHJcbi5jb3JyZWN0U2l6ZSAubWF0LWxpc3QtaXRlbSB7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcclxufVxyXG5cclxuLmFuc3dlcntcclxuICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBHZW5ldmEsIFRhaG9tYSwgc2Fucy1zZXJpZjtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbi5xdWVzdGlvbiB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHdpZHRoOiA1MCU7XHJcbn1cclxuXHJcbi5pY29uIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDEwJTtcclxufVxyXG5cclxudGFibGUge1xyXG4gICAgd2lkdGg6OTAlXHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgICBtYXJnaW46IDVweFxyXG59Il19 */\"","module.exports = \"<urlchange></urlchange>\\r\\n<imageposter></imageposter>\\r\\n<div class=\\\"checkOverflow teacherContent\\\">\\r\\n  <mat-card class=\\\"checkOverflow teacherContent\\\">\\r\\n    <mat-card-title>Respuestas corregidas</mat-card-title>\\r\\n    <mat-nav-list\\r\\n      *ngIf=\\\"markedAnswers?.length == 0\\\"\\r\\n      role=\\\"list\\\"\\r\\n      class=\\\"correctSize\\\"\\r\\n    >\\r\\n      <mat-card-content>No hay respuestas corregidas</mat-card-content>\\r\\n      <div align=\\\"center\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialogAnswer()\\\">\\r\\n          <mat-icon>add</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n    </mat-nav-list>\\r\\n    <mat-nav-list\\r\\n      *ngIf=\\\"markedAnswers?.length > 0\\\"\\r\\n      role=\\\"list\\\"\\r\\n      class=\\\"correctSize\\\"\\r\\n    >\\r\\n      <div\\r\\n        *ngFor=\\\"let ans of markedAnswers\\\"\\r\\n        role=\\\"listitem\\\"\\r\\n        class=\\\"checkOverflow\\\"\\r\\n      >\\r\\n        <div *ngIf=\\\"ans.marked\\\" class=\\\"answer\\\">\\r\\n          <mat-divider></mat-divider>\\r\\n          <table>\\r\\n            <td style=\\\"width: 110%\\\">\\r\\n              <textarea\\r\\n                value=\\\"{{ ans.answerText }}\\\"\\r\\n                style=\\\"width: 90%\\\"\\r\\n                rows=\\\"3\\\"\\r\\n                autocapitalize=\\\"characters\\\"\\r\\n                required\\r\\n                #answerText\\r\\n              ></textarea>\\r\\n            </td>\\r\\n            <mat-radio-group>\\r\\n              <td>\\r\\n                <mat-radio-button\\r\\n                  color=\\\"primary\\\"\\r\\n                  name=\\\"correct{{ ans.id }}\\\"\\r\\n                  [checked]=\\\"ans.correct\\\"\\r\\n                  value=\\\"yes\\\"\\r\\n                >\\r\\n                  Correcta\\r\\n                </mat-radio-button>\\r\\n              </td>\\r\\n              <td>\\r\\n                <mat-radio-button\\r\\n                  color=\\\"primary\\\"\\r\\n                  name=\\\"correct{{ ans.id }}\\\"\\r\\n                  [checked]=\\\"!ans.correct\\\"\\r\\n                  value=\\\"no\\\"\\r\\n                  #markedAnswerIncorrect\\r\\n                >\\r\\n                  Incorrecta\\r\\n                </mat-radio-button>\\r\\n              </td>\\r\\n            </mat-radio-group>\\r\\n          </table>\\r\\n          <table class=\\\"btnPanel\\\">\\r\\n            <td>\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"deleteAnswer(ans.id)\\\"\\r\\n              >\\r\\n                <mat-icon>delete</mat-icon> Borrar\\r\\n              </button>\\r\\n\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"\\r\\n                  editAnswer(\\r\\n                    ans,\\r\\n                    answerText.value,\\r\\n                    markedAnswerIncorrect.checked\\r\\n                  )\\r\\n                \\\"\\r\\n              >\\r\\n                <mat-icon>build</mat-icon>Editar\\r\\n              </button>\\r\\n            </td>\\r\\n          </table>\\r\\n          <div *ngIf=\\\"!ans.correct\\\">\\r\\n            <a\\r\\n              *ngFor=\\\"let jus of markedJust.get(ans.id)\\\"\\r\\n              role=\\\"listitem\\\"\\r\\n              class=\\\"checkOverflow\\\"\\r\\n              required\\r\\n            >\\r\\n              <table>\\r\\n                <td style=\\\"width: 100%\\\">\\r\\n                  <mat-card-subtitle> JUSTIFICACION: </mat-card-subtitle>\\r\\n                  <table style=\\\"width: 80%\\\">\\r\\n                    <td style=\\\"width: 80%\\\">\\r\\n                      <textarea\\r\\n                        value=\\\"{{ jus.justificationText }}\\\"\\r\\n                        style=\\\"width: 90%\\\"\\r\\n                        rows=\\\"3\\\"\\r\\n                        autocapitalize=\\\"characters\\\"\\r\\n                      ></textarea>\\r\\n                    </td>\\r\\n                    <mat-radio-group>\\r\\n                      <td>\\r\\n                        <mat-radio-button\\r\\n                          color=\\\"primary\\\"\\r\\n                          name=\\\"valid{{ jus.id }}\\\"\\r\\n                          [checked]=\\\"jus.valid\\\"\\r\\n                          value=\\\"yes\\\"\\r\\n                        >\\r\\n                          Válida\\r\\n                        </mat-radio-button>\\r\\n                      </td>\\r\\n                      <td>\\r\\n                        <mat-radio-button\\r\\n                          color=\\\"primary\\\"\\r\\n                          name=\\\"valid{{ jus.id }}\\\"\\r\\n                          [checked]=\\\"!jus.valid\\\"\\r\\n                          value=\\\"no\\\"\\r\\n                        >\\r\\n                          Inválida\\r\\n                        </mat-radio-button>\\r\\n                      </td>\\r\\n                    </mat-radio-group>\\r\\n                  </table>\\r\\n                </td>\\r\\n                <td [hidden]=\\\"jus.valid\\\">\\r\\n                  <mat-card-subtitle> ERROR: </mat-card-subtitle>\\r\\n                  <textarea\\r\\n                    value=\\\"{{ jus.error }}\\\"\\r\\n                    style=\\\"width: 200%\\\"\\r\\n                    rows=\\\"3\\\"\\r\\n                    autocapitalize=\\\"characters\\\"\\r\\n                  ></textarea>\\r\\n                </td>\\r\\n              </table>\\r\\n              <table>\\r\\n                <td>\\r\\n                  <button\\r\\n                    mat-raised-button\\r\\n                    color=\\\"primary\\\"\\r\\n                    (click)=\\\"deleteJustification(jus.id, ans.id)\\\"\\r\\n                  >\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                  </button>\\r\\n                  <button mat-raised-button color=\\\"primary\\\">\\r\\n                    <mat-icon></mat-icon>\\r\\n                  </button>\\r\\n                </td>\\r\\n              </table>\\r\\n            </a>\\r\\n            <mat-divider></mat-divider>\\r\\n            <table>\\r\\n              <td>\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  color=\\\"primary\\\"\\r\\n                  (click)=\\\"getMarkedJustificationsByAnswer(ans.id)\\\"\\r\\n                >\\r\\n                  <span>Mostrar más</span>\\r\\n                </button>\\r\\n              </td>\\r\\n              <td>\\r\\n                <button\\r\\n                  mat-raised-button\\r\\n                  color=\\\"primary\\\"\\r\\n                  (click)=\\\"addJustification(ans.id)\\\"\\r\\n                >\\r\\n                  <mat-icon>plus_one</mat-icon>\\r\\n                </button>\\r\\n              </td>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <mat-divider></mat-divider>\\r\\n      </div>\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"getMarkedAnswers()\\\">\\r\\n        <span>Mostrar más</span>\\r\\n      </button>\\r\\n      <div align=\\\"center\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialogAnswer()\\\">\\r\\n          <mat-icon>add</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n    </mat-nav-list>\\r\\n  </mat-card>\\r\\n\\r\\n  <mat-card class=\\\"checkOverflow teacherContent\\\">\\r\\n    <mat-card-title>Respuestas por corregir</mat-card-title>\\r\\n    <mat-nav-list\\r\\n      *ngIf=\\\"unmarkedAnswers?.length == 0\\\"\\r\\n      role=\\\"list\\\"\\r\\n      class=\\\"correctSize\\\"\\r\\n    >\\r\\n      <mat-card-content>No hay respuestas por corregir</mat-card-content>\\r\\n    </mat-nav-list>\\r\\n    <mat-nav-list\\r\\n      *ngIf=\\\"unmarkedAnswers?.length > 0\\\"\\r\\n      role=\\\"list\\\"\\r\\n      class=\\\"correctSize\\\"\\r\\n    >\\r\\n      <div\\r\\n        *ngFor=\\\"let ans of unmarkedAnswers\\\"\\r\\n        role=\\\"listitem\\\"\\r\\n        class=\\\"checkOverflow\\\"\\r\\n      >\\r\\n        <div class=\\\"answer\\\">\\r\\n          <mat-divider></mat-divider>\\r\\n          <table>\\r\\n            <td style=\\\"width: 90%\\\">\\r\\n              <textarea\\r\\n                value=\\\"{{ ans.answerText }}\\\"\\r\\n                style=\\\"width: 90%\\\"\\r\\n                rows=\\\"3\\\"\\r\\n                autocapitalize=\\\"characters\\\"\\r\\n                disabled\\r\\n                required\\r\\n              ></textarea>\\r\\n            </td>\\r\\n            <mat-radio-group>\\r\\n              <td>\\r\\n                <mat-radio-button\\r\\n                  color=\\\"primary\\\"\\r\\n                  name=\\\"correct\\\"\\r\\n                  id=\\\"correct{{ ans.id }}\\\"\\r\\n                  [checked]=\\\"false\\\"\\r\\n                  value=\\\"yes\\\"\\r\\n                >\\r\\n                  Correcta\\r\\n                </mat-radio-button>\\r\\n              </td>\\r\\n              <td>\\r\\n                <mat-radio-button\\r\\n                  color=\\\"primary\\\"\\r\\n                  name=\\\"correct\\\"\\r\\n                  id=\\\"incorrect{{ ans.id }}\\\"\\r\\n                  [checked]=\\\"false\\\"\\r\\n                  value=\\\"no\\\"\\r\\n                >\\r\\n                  Incorrecta\\r\\n                </mat-radio-button>\\r\\n              </td>\\r\\n            </mat-radio-group>\\r\\n          </table>\\r\\n          <button mat-raised-button color=\\\"primary\\\">\\r\\n            <span>Corregir (no hace na)</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <mat-divider></mat-divider>\\r\\n      </div>\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"getUnmarkedAnswers()\\\">\\r\\n        <span>Mostrar más</span>\\r\\n      </button>\\r\\n    </mat-nav-list>\\r\\n  </mat-card>\\r\\n\\r\\n  <mat-card class=\\\"checkOverflow teacherContent\\\">\\r\\n    <mat-card-title>Justificaciones por corregir</mat-card-title>\\r\\n    <mat-nav-list\\r\\n      *ngIf=\\\"unmarkedJust?.length == 0\\\"\\r\\n      role=\\\"list\\\"\\r\\n      class=\\\"correctSize\\\"\\r\\n    >\\r\\n      <mat-card-content>No hay justificaciones por corregir</mat-card-content>\\r\\n    </mat-nav-list>\\r\\n    <mat-nav-list\\r\\n      *ngIf=\\\"unmarkedJust?.length > 0\\\"\\r\\n      role=\\\"list\\\"\\r\\n      class=\\\"correctSize\\\"\\r\\n    >\\r\\n      <div\\r\\n        *ngFor=\\\"let jus of unmarkedJust\\\"\\r\\n        role=\\\"listitem\\\"\\r\\n        class=\\\"checkOverflow\\\"\\r\\n      >\\r\\n        <div class=\\\"answer\\\">\\r\\n          <table>\\r\\n            <td style=\\\"width: 90%\\\">\\r\\n              <textarea\\r\\n                value=\\\"{{ jus.answer.answerText }}\\\"\\r\\n                style=\\\"width: 90%\\\"\\r\\n                rows=\\\"3\\\"\\r\\n                required\\r\\n                disabled\\r\\n              ></textarea>\\r\\n            </td>\\r\\n            <mat-radio-group>\\r\\n              <td>\\r\\n                <mat-radio-button\\r\\n                  color=\\\"primary\\\"\\r\\n                  name=\\\"correct\\\"\\r\\n                  id=\\\"correct{{ jus.answer.id }}\\\"\\r\\n                  [checked]=\\\"jus.answer.correct === true\\\"\\r\\n                  value=\\\"yes\\\"\\r\\n                  required\\r\\n                  disabled\\r\\n                >\\r\\n                  Correcta\\r\\n                </mat-radio-button>\\r\\n              </td>\\r\\n              <td>\\r\\n                <mat-radio-button\\r\\n                  color=\\\"primary\\\"\\r\\n                  name=\\\"correct\\\"\\r\\n                  id=\\\"incorrect{{ jus.answer.id }}\\\"\\r\\n                  [checked]=\\\"jus.answer.correct === false\\\"\\r\\n                  value=\\\"no\\\"\\r\\n                  required\\r\\n                  disabled\\r\\n                >\\r\\n                  Incorrecta\\r\\n                </mat-radio-button>\\r\\n              </td>\\r\\n            </mat-radio-group>\\r\\n          </table>\\r\\n          <table>\\r\\n            <td style=\\\"width: 100%\\\">\\r\\n              <mat-card-subtitle> JUSTIFICACION: </mat-card-subtitle>\\r\\n              <table style=\\\"width: 80%\\\">\\r\\n                <td style=\\\"width: 80%\\\">\\r\\n                  <textarea\\r\\n                    value=\\\"{{ jus.justificationText }}\\\"\\r\\n                    style=\\\"width: 90%\\\"\\r\\n                    rows=\\\"3\\\"\\r\\n                    autocapitalize=\\\"characters\\\"\\r\\n                    disabled\\r\\n                  ></textarea>\\r\\n                </td>\\r\\n                <mat-radio-group>\\r\\n                  <td>\\r\\n                    <mat-radio-button\\r\\n                      color=\\\"primary\\\"\\r\\n                      name=\\\"valid{{ jus.id }}\\\"\\r\\n                      [checked]=\\\"false\\\"\\r\\n                      value=\\\"yes\\\"\\r\\n                      #validRadio\\r\\n                    >\\r\\n                      Válida\\r\\n                    </mat-radio-button>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <mat-radio-button\\r\\n                      color=\\\"primary\\\"\\r\\n                      name=\\\"valid{{ jus.id }}\\\"\\r\\n                      [checked]=\\\"false\\\"\\r\\n                      value=\\\"no\\\"\\r\\n                      #invalidRadio\\r\\n                    >\\r\\n                      Inválida\\r\\n                    </mat-radio-button>\\r\\n                  </td>\\r\\n                </mat-radio-group>\\r\\n              </table>\\r\\n            </td>\\r\\n            <td [hidden]=\\\"!invalidRadio.checked\\\">\\r\\n              <mat-card-subtitle> ERROR: </mat-card-subtitle>\\r\\n              <textarea\\r\\n                style=\\\"width: 200%\\\"\\r\\n                rows=\\\"3\\\"\\r\\n                autocapitalize=\\\"characters\\\"\\r\\n                #errorMarkJust\\r\\n              ></textarea>\\r\\n            </td>\\r\\n          </table>\\r\\n          <table class=\\\"btnPanel\\\">\\r\\n            <td>\\r\\n              <button\\r\\n                mat-raised-button\\r\\n                (click)=\\\"this.markJust(jus.answer.id, jus.id, invalidRadio.checked, validRadio.checked, errorMarkJust?.value)\\\"\\r\\n                color=\\\"primary\\\"\\r\\n              >\\r\\n                <mat-icon>done</mat-icon>Corregir\\r\\n              </button>\\r\\n            </td>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n      <button\\r\\n        mat-raised-button\\r\\n        color=\\\"primary\\\"\\r\\n        (click)=\\\"getUnmarkedJustifications()\\\"\\r\\n      >\\r\\n        <span>Mostrar más</span>\\r\\n      </button>\\r\\n    </mat-nav-list>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { AnswerService } from \"./answer.service\";\r\nimport { Answer } from \"./answer.model\";\r\nimport { JustificationService } from \"./justification.service\";\r\nimport { Justification } from \"./justification.model\";\r\nimport { Page } from \"../page/page.model\";\r\nimport { DiagramComponent } from \"../diagram/diagram.component\";\r\nimport { NewAnswerComponent } from \"./newanswer.component\";\r\nimport {\r\n  MatTableDataSource,\r\n  MatDialog,\r\n  MatRadioGroup\r\n} from \"@angular/material\";\r\nimport { TdDialogService } from \"@covalent/core\";\r\nimport { NewJustComponent } from \"./newjust.component\";\r\n\r\n/**\r\n * Wrapper component for all teacher information.\r\n */\r\n@Component({\r\n  selector: \"teacher\",\r\n  templateUrl: \"./teacher.component.html\",\r\n  styleUrls: [\"./teacher.component.css\"]\r\n})\r\nexport class TeacherComponent {\r\n  dataSourceMarked: MatTableDataSource<Answer>;\r\n  markedAnswers: Answer[] = [];\r\n  markedAnswersPage: number;\r\n  markedOnce: number;\r\n  //-1 means not initialized, 0 means false, 1 means true\r\n  //we need to use -1 so we don't get the alert first time we try to get them\r\n\r\n  dataSourceUnmarked: MatTableDataSource<Answer>;\r\n  unmarkedAnswers: Answer[] = [];\r\n  unmarkedAnswersPage: number;\r\n  unmarkedOnce: number;\r\n  //-1 means not initialized, 0 means false, 1 means true\r\n\r\n  dataSourceJustUnmarked: MatTableDataSource<Justification>;\r\n  unmarkedJust: Justification[] = [];\r\n  unmarkedJustPage: number;\r\n  unmarkedJustOnce: number;\r\n  //-1 means not initialized, 0 means false, 1 means true\r\n\r\n  dataSourceJustmarked: Map<\r\n    number,\r\n    MatTableDataSource<Justification>\r\n  > = new Map();\r\n  markedJust: Map<number, Justification[]> = new Map(); // key is answer id\r\n  markedJustPage: Map<number, number> = new Map(); // key is answer id\r\n  markedJustOnce: Map<number, number> = new Map(); // key: answer id   value:  -1 means not initialized, 0 means false, 1 means true\r\n\r\n  //answerPage: Page<Answer>;\r\n  //justPages: Map<number, Page<Justification>>; // key: answer id     value: justification page per answer\r\n  id: number; //concept id\r\n\r\n  constructor(\r\n    private answerDialog: MatDialog,\r\n    private diagramDialog: MatDialog,\r\n    private router: Router,\r\n    activatedRoute: ActivatedRoute,\r\n    private answerService: AnswerService,\r\n    private justificationService: JustificationService,\r\n    private dialogService: TdDialogService\r\n  ) {\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function() {\r\n      return false;\r\n    };\r\n    this.id = activatedRoute.snapshot.params[\"id\"];\r\n    this.markedAnswersPage = 0;\r\n    this.markedOnce = -1;\r\n    this.unmarkedAnswersPage = 0;\r\n    this.unmarkedOnce = -1;\r\n    this.unmarkedJustPage = 0;\r\n    this.unmarkedJustOnce = -1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMarkedAnswers();\r\n    this.getUnmarkedAnswers();\r\n    this.getUnmarkedJustifications();\r\n  }\r\n\r\n  getMarkedAnswers() {\r\n    let once: number = this.markedOnce;\r\n    if (once == -1 || once == 0) {\r\n      let page: number = this.markedAnswersPage++;\r\n      this.answerService.getMarkedAnswers(this.id, page).subscribe(\r\n        (data: Page<Answer>) => {\r\n          if (data.numberOfElements === 0 && once == 0) {\r\n            this.markedOnce = 1;\r\n            this.dialogService.openAlert({\r\n              message: \"No hay más respuestas corregidas\",\r\n              title: \"No hay más respuestas\",\r\n              closeButton: \"Cerrar\"\r\n            });\r\n          } else if (data.numberOfElements > 0) {\r\n            if (once == -1) {\r\n              this.markedOnce = 0;\r\n            }\r\n            this.markedAnswers = this.markedAnswers.concat(data.content);\r\n            this.dataSourceMarked = new MatTableDataSource(this.markedAnswers);\r\n            data.content.forEach(answer => {\r\n              if (!answer.correct) {\r\n                let id = answer.id;\r\n                if (!this.markedJustOnce.has(id)) {\r\n                  this.markedJustOnce.set(id, -1);\r\n                  this.markedJustPage.set(id, -1); //starts in -1 bc its increased after\r\n                }\r\n                this.getMarkedJustificationsByAnswer(id);\r\n              }\r\n            });\r\n          }\r\n        },\r\n        error => console.log(error + \"markedanswers\")\r\n      );\r\n    }\r\n  }\r\n\r\n  getUnmarkedAnswers() {\r\n    let once: number = this.unmarkedOnce;\r\n    if (once == -1 || once == 0) {\r\n      let page: number = this.unmarkedAnswersPage++;\r\n      this.answerService.getUnmarkedAnswers(this.id, page).subscribe(\r\n        (data: Page<Answer>) => {\r\n          if (data.numberOfElements === 0 && once == 0) {\r\n            this.unmarkedOnce = 1;\r\n            this.dialogService.openAlert({\r\n              message: \"No hay más respuestas por corregir\",\r\n              title: \"No hay más respuestas\",\r\n              closeButton: \"Cerrar\"\r\n            });\r\n          } else if (data.numberOfElements > 0) {\r\n            if (once == -1) {\r\n              this.unmarkedOnce = 0;\r\n            }\r\n            this.unmarkedAnswers = this.unmarkedAnswers.concat(data.content);\r\n            this.dataSourceUnmarked = new MatTableDataSource(\r\n              this.unmarkedAnswers\r\n            );\r\n          }\r\n        },\r\n        error => console.log(error + \"unmarkedanswers\")\r\n      );\r\n    }\r\n  }\r\n\r\n  getUnmarkedJustifications() {\r\n    let once: number = this.unmarkedJustOnce;\r\n    if (once == -1 || once == 0) {\r\n      let page: number = this.unmarkedJustPage++;\r\n      this.justificationService\r\n        .getUnmarkedJustifications(this.id, page)\r\n        .subscribe(\r\n          (data: Page<Justification>) => {\r\n            if (data.numberOfElements === 0 && once == 0) {\r\n              this.unmarkedJustOnce = 1;\r\n              this.dialogService.openAlert({\r\n                message: \"No hay más justificaciones por corregir\",\r\n                title: \"No hay más justificaciones\",\r\n                closeButton: \"Cerrar\"\r\n              });\r\n            } else if (data.numberOfElements > 0) {\r\n              if (once == -1) {\r\n                this.unmarkedJustOnce = 0;\r\n              }\r\n              this.unmarkedJust = this.unmarkedJust.concat(data.content);\r\n              this.dataSourceJustUnmarked = new MatTableDataSource(\r\n                this.unmarkedJust\r\n              );\r\n            }\r\n          },\r\n          error => console.log(error + \"unmarkedjustifications\")\r\n        );\r\n    }\r\n  }\r\n\r\n  getMarkedJustificationsByAnswer(answerId: number) {\r\n    let once: number = this.markedJustOnce.get(answerId);\r\n    if (once == -1 || once == 0) {\r\n      let page: number = this.markedJustPage.get(answerId) + 1;\r\n      this.justificationService\r\n        .getMarkedJustificationsByAnswer(this.id, answerId, page)\r\n        .subscribe(\r\n          (data: Page<Justification>) => {\r\n            if (data.numberOfElements === 0 && once == 0) {\r\n              this.markedJustOnce.set(answerId, 1);\r\n              this.dialogService.openAlert({\r\n                message: \"No hay más justificaciones en esta respuesta\", //TODO: put answer name\r\n                title: \"No hay más justificaciones\",\r\n                closeButton: \"Cerrar\"\r\n              });\r\n            } else if (data.numberOfElements > 0) {\r\n              if (once == -1) {\r\n                this.markedJustOnce.set(answerId, 0);\r\n                this.markedJust.set(answerId, []);\r\n              }\r\n              this.markedJustPage.set(answerId, page);\r\n              let just = this.markedJust.get(answerId).concat(data.content);\r\n              this.markedJust.set(answerId, just);\r\n              this.dataSourceJustmarked.set(\r\n                answerId,\r\n                new MatTableDataSource(just)\r\n              );\r\n            }\r\n          },\r\n          error =>\r\n            console.log(error + \"markedjustifications in answer \" + answerId)\r\n        );\r\n    }\r\n  }\r\n\r\n  deleteAnswer(answerId: number) {\r\n    this.dialogService\r\n      .openConfirm({\r\n        message: \"¿Quieres eliminar esta respuesta?\",\r\n        title: \"Confirmar\",\r\n        acceptButton: \"Aceptar\",\r\n        cancelButton: \"Cancelar\",\r\n        width: \"500px\",\r\n        height: \"175px\"\r\n      })\r\n      .afterClosed()\r\n      .subscribe((accept: boolean) => {\r\n        if (accept) {\r\n          this.answerService.removeAnswer(answerId, this.id).subscribe(\r\n            _ => {\r\n              let answer: Answer = this.markedAnswers.find(\r\n                a => a.id == answerId\r\n              );\r\n              let index = this.markedAnswers.indexOf(answer, 0);\r\n              if (index >= 0) {\r\n                this.markedAnswers.splice(index, 1);\r\n                this.dataSourceMarked = new MatTableDataSource(\r\n                  this.markedAnswers\r\n                );\r\n              }\r\n            },\r\n            error => console.error(error + \"markedanswers on ans delete\")\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteJustification(justId: number, answerId: number) {\r\n    this.dialogService\r\n      .openConfirm({\r\n        message: \"¿Quieres eliminar esta justificacion?\",\r\n        title: \"Confirmar\",\r\n        acceptButton: \"Aceptar\",\r\n        cancelButton: \"Cancelar\",\r\n        width: \"500px\",\r\n        height: \"175px\"\r\n      })\r\n      .afterClosed()\r\n      .subscribe((accept: boolean) => {\r\n        if (accept) {\r\n          this.justificationService\r\n            .removeJustification(justId, answerId)\r\n            .subscribe(\r\n              _ => {\r\n                let justOfAnswer = this.markedJust.get(answerId); //get array of just from map\r\n                let just: Justification = justOfAnswer.find(\r\n                  j => j.id == justId\r\n                ); //get just from array\r\n                let index = justOfAnswer.indexOf(just, 0); //get just index\r\n                justOfAnswer.splice(index, 1); //delete just from array\r\n                this.markedJust.set(answerId, justOfAnswer); //set updated array in map\r\n                this.dataSourceJustmarked.set(\r\n                  answerId,\r\n                  new MatTableDataSource(justOfAnswer)\r\n                );\r\n              },\r\n              error => {\r\n                if (error === 400) {\r\n                  this.dialogService.openAlert({\r\n                    message:\r\n                      \"No se puede eliminar una justificación de una respuesta incorrecta si no hay mas justificaciones\",\r\n                    title: \"Error al borrar\",\r\n                    closeButton: \"Cerrar\"\r\n                  });\r\n                } else {\r\n                  console.error(error + \"markedanswers on just delete\");\r\n                }\r\n              }\r\n            );\r\n        }\r\n      });\r\n  }\r\n\r\n  showDiagram() {\r\n    this.diagramDialog.open(DiagramComponent, {\r\n      height: \"600px\",\r\n      width: \"800px\"\r\n    });\r\n  }\r\n\r\n  openDialogAnswer() {\r\n    const dialogRef = this.answerDialog.open(NewAnswerComponent, {\r\n      data: {\r\n        id: this.id\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.markedAnswers.push(result);\r\n      this.markedJust.set(result.id, result.justifications);\r\n      this.dataSourceMarked = new MatTableDataSource(this.markedAnswers);\r\n      this.dataSourceJustmarked.set(\r\n        result.id,\r\n        new MatTableDataSource(result.justifications)\r\n      );\r\n    });\r\n  }\r\n\r\n  addJustification(answerId: number) {\r\n    const dialogRef = this.answerDialog.open(NewJustComponent, {\r\n      data: {\r\n        id: answerId\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        let justOfAnswer = this.markedJust.get(answerId).concat(result);\r\n        this.markedJust.set(answerId, justOfAnswer);\r\n        this.dataSourceJustmarked.set(\r\n          answerId,\r\n          new MatTableDataSource(justOfAnswer)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  editAnswer(oldAnswer: Answer, answerText: string, incorrect: boolean) {\r\n    this.editAnswerServiceCall(oldAnswer, answerText, incorrect);\r\n  }\r\n\r\n  private editAnswerServiceCall(\r\n    oldAnswer: Answer,\r\n    answerText: string,\r\n    incorrect: boolean\r\n  ) {\r\n    this.answerService\r\n      .editAnswer(this.id, oldAnswer.id, answerText, !incorrect)\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n          if (incorrect && oldAnswer.correct) {\r\n            let dialogRef = this.answerDialog.open(NewJustComponent, {\r\n              data: {\r\n                id: oldAnswer.id\r\n              }\r\n            });\r\n            dialogRef.afterClosed().subscribe(result => {\r\n              if (result) {\r\n                this.markedJust.set(oldAnswer.id, [result]);\r\n                this.dataSourceJustmarked.set(\r\n                  oldAnswer.id,\r\n                  new MatTableDataSource(result)\r\n                );\r\n                oldAnswer.answerText = answerText;\r\n                oldAnswer.correct = !incorrect;\r\n              }\r\n            });\r\n          } else if (!incorrect && !oldAnswer.correct) {\r\n            this.markedJust.get(oldAnswer.id).length = 0;\r\n            this.markedJustOnce.delete(oldAnswer.id);\r\n            this.markedJustPage.delete(oldAnswer.id);\r\n            oldAnswer.answerText = answerText;\r\n            oldAnswer.correct = !incorrect;\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  markJust(\r\n    answerId: number,\r\n    justId: number,\r\n    invalid: boolean,\r\n    valid: boolean,\r\n    errorText?: string\r\n  ) {\r\n    if (!valid && !invalid) {\r\n      this.dialogService.openAlert({\r\n        message: \"Es necesario especificar si la justificación es válida o no.\",\r\n        closeButton: \"Cerrar\"\r\n      })\r\n    } else {\r\n      if (errorText) {\r\n          this.justificationService\r\n            .markJustification(answerId, justId, !invalid, errorText)\r\n            .subscribe(\r\n              data => {\r\n                //TODO: show this marked justification in marked answers and remove from unmarked justifications (better use a new function)\r\n                console.log(data);\r\n              },\r\n              error => console.log(error)\r\n            );\r\n      } else {\r\n        if (!invalid) {\r\n          this.justificationService\r\n            .markJustification(answerId, justId, !invalid)\r\n            .subscribe(\r\n              data => {\r\n                //TODO: show this marked justification in marked answers and remove from unmarked justifications (better use a new function)\r\n                console.log(data);\r\n              },\r\n              error => console.log(error)\r\n            );\r\n        } else {\r\n          this.dialogService.openAlert({\r\n            message:\r\n              \"Es necesario especificar el error si la justificación no es válida.\",\r\n            closeButton: \"Cerrar\"\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { Concept } from '../home/concept.model';\r\n\r\n/**\r\n * Service for teacher requests to backend\r\n */\r\n@Injectable()\r\nexport class TeacherService {\r\n  constructor(private http: HttpClient) { }\r\n  apiUrl = environment.baseUrl;\r\n\r\n  getConceptInfo(id: number) {\r\n    return this.http.get<Concept>(this.apiUrl + \"/concepts/\" + id, { withCredentials: true });\r\n  }\r\n  updateConceptInfo(id: number, conceptInfo: Concept) {\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n    return this.http.put<Concept>(this.apiUrl + \"/concepts/\" + id, conceptInfo, { headers: headers, withCredentials: true});\r\n  }\r\n}\r\n","module.exports = \"#urlForm {\\r\\n    margin-left:16px;\\r\\n    width:90%;\\r\\n}\\r\\nmat-card-title {\\r\\n    text-align: center;\\r\\n    text-transform: uppercase;\\r\\n    padding-bottom: 2%;\\r\\n    width: 100%\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhY2hlci91cmxjaGFuZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixTQUFTO0FBQ2I7QUFDQTtJQUNJLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsa0JBQWtCO0lBQ2xCO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC90ZWFjaGVyL3VybGNoYW5nZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3VybEZvcm0ge1xyXG4gICAgbWFyZ2luLWxlZnQ6MTZweDtcclxuICAgIHdpZHRoOjkwJTtcclxufVxyXG5tYXQtY2FyZC10aXRsZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDIlO1xyXG4gICAgd2lkdGg6IDEwMCVcclxufSJdfQ== */\"","module.exports = \"<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Url</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <form (ngSubmit)=saveUrl()>\\r\\n    <mat-form-field id=\\\"urlForm\\\">\\r\\n      <input matInput type=\\\"url\\\" class=\\\"form-control\\\" name=\\\"url\\\" [(ngModel)]=\\\"url\\\" />\\r\\n    </mat-form-field>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">\\r\\n        Guardar\\r\\n      </button>\\r\\n    </mat-card-actions>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { Component } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { TeacherService } from \"./teacher.service\";\r\nimport { Concept } from '../home/concept.model';\r\n\r\n/**\r\n * Url changer for teacher\r\n */\r\n@Component({\r\n  selector: \"urlchange\",\r\n  templateUrl: \"./urlchange.component.html\",\r\n  styleUrls: [\"./urlchange.component.css\"]\r\n})\r\nexport class UrlChangerComponent {\r\n  url: string = \"\";\r\n  id: number;\r\n  constructor(\r\n    private router: Router,\r\n    activatedRoute: ActivatedRoute,\r\n    private teacherService: TeacherService\r\n  ) {\r\n    this.id = activatedRoute.snapshot.params[\"id\"];\r\n    this.teacherService\r\n      .getConceptInfo(this.id)\r\n      .subscribe(\r\n        (data: Concept) => (this.url = data[\"URL\"]),\r\n        error => console.log(error)\r\n      );\r\n  }\r\n  saveUrl() {\r\n    let conceptInfo = {\r\n      URL: this.url\r\n    };\r\n    this.teacherService\r\n      .updateConceptInfo(this.id, conceptInfo)\r\n      .subscribe(\r\n        (data: Concept) => (this.url = data[\"URL\"]),\r\n        error => console.log(error)\r\n      );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: '/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}